<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Faceless Blog</title>
        <link>https://Alanhays.github.io</link>
        <description>数据采集、逆向安全、网络杂谈</description>
        <language>zh-CN</language>
        <pubDate>Wed, 17 Apr 2024 02:32:34 +0000</pubDate>
        <lastBuildDate>Wed, 17 Apr 2024 02:32:34 +0000</lastBuildDate>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/18615.html</guid>
            <title>clash配置-轮询|散列模式</title>
            <link>https://alanhays.github.io/posts/18615.html</link>
            <pubDate>Wed, 17 Apr 2024 02:32:34 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;tags: [‘clash’]&lt;br&gt;
 categories: ‘经验教程’&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;一-在-clash-配置页面配置预处理配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-在-clash-配置页面配置预处理配置&#34;&gt;#&lt;/a&gt; 一、在 clash 配置页面配置预处理配置&lt;/h2&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;parsers:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  - reg: &amp;#x27;slbable$&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    yaml:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      append-proxy-groups:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        - name: ⚖️ 负载均衡-散列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          type: load-balance&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          url: &amp;#x27;http://www.google.com/generate_204&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          interval: 300&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          strategy: consistent-hashing&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        - name: ⚖️ 负载均衡-轮询&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          type: load-balance&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          url: &amp;#x27;http://www.google.com/generate_204&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          interval: 300&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          strategy: round-robin&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      commands:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        - proxy-groups.⚖️ 负载均衡-散列.proxies=[]proxyNames&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        - proxy-groups.0.proxies.0+⚖️ 负载均衡-散列&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        - proxy-groups.⚖️ 负载均衡-轮询.proxies=[]proxyNames&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        - proxy-groups.0.proxies.0+⚖️ 负载均衡-轮询&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;二-重新下载配置文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二-重新下载配置文件&#34;&gt;#&lt;/a&gt; 二、重新下载配置文件&lt;/h2&gt;
&lt;p&gt;在配置 url 尾部添加  &lt;code&gt;#slbable&lt;/code&gt;  ，下载完成即可选择轮询与散列模式。&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/57474.html</guid>
            <title>基于Hexo框架语雀文章博客模板</title>
            <link>https://alanhays.github.io/posts/57474.html</link>
            <pubDate>Thu, 15 Feb 2024 12:28:23 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;tags: [‘GitHub’,‘Actions’]&lt;br&gt;
 categories: ‘精选推荐’&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;sticky: ‘10’&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;跳转仓库:&lt;a href=&#34;https://github.com/haysalan/hexo-yuque-template&#34;&gt;haysalan/hexo-yuque-template&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;特点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#特点&#34;&gt;#&lt;/a&gt; 特点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;支持在线一键部署或更新博客&lt;/li&gt;
&lt;li&gt;支持拉取语雀文章自动更新博客内容&lt;/li&gt;
&lt;li&gt;支持自定义 github actons 或 gitee 工作流&lt;/li&gt;
&lt;li&gt;高度可配置，支持自定义部署脚本&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用&#34;&gt;#&lt;/a&gt; 使用&lt;/h2&gt;
&lt;h3 id=&#34;第一步-新建仓库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第一步-新建仓库&#34;&gt;#&lt;/a&gt; 第一步 新建仓库&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;新建两个仓库&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一个私有仓库（名称随意）用于存放 hexo 博客配置等文件&lt;/p&gt;
&lt;p&gt;一个开源仓库 &lt;a href=&#34;http://yourname.github.io&#34;&gt;yourname.github.io&lt;/a&gt; （替换成你的用户名）&lt;/p&gt;
&lt;h3 id=&#34;第二步-配置私有仓库环境变量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第二步-配置私有仓库环境变量&#34;&gt;#&lt;/a&gt; 第二步 配置私有仓库环境变量&lt;/h3&gt;
&lt;p&gt;1.github 个人设置创建 token 给与 workflow 权限以及无时间期限。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2024/png/26634545/1708004138179-a9745680-2e72-416d-bba9-00913ab4e7cb.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;2. 将 github token 配置到你的私有仓库中。&lt;strong&gt;名称需一致&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2024/png/26634545/1708000324358-713596cf-6b43-47b7-8e7e-7d80a21466d2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;3. 进入语雀网页版个人设置，获取语雀 token（现在需要超级会员才能创建，有之前创建的好的可直接使用）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2024/png/26634545/1708001750001-786dbfbf-4cc0-4ad0-b912-1f5d800cbb4b.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;4. 将语雀 token 配置到私有仓库中 &lt;strong&gt;名称需一致&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2024/png/26634545/1708000395322-ba9dfab1-e87f-445d-aaa5-b774e992de19.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;第三步-修改-actions&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第三步-修改-actions&#34;&gt;#&lt;/a&gt; 第三步 修改 actions&lt;/h3&gt;
&lt;p&gt;目录  &lt;code&gt;.github/workflows/blog-update.yml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将其中的 PUBLISH_REPOSITORY 修改为你的开源仓库路径。&lt;/p&gt;
&lt;p&gt;目录： &lt;code&gt;actions/gitee-sync.yml&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;actions&lt;/code&gt;  目录下存放开源仓库的工作流，用于在开源仓库触发执行。 &lt;code&gt;gitee-sync.yml &lt;/code&gt; 基于 &lt;a href=&#34;https://github.com/yanglbme/gitee-pages-action&#34;&gt;yanglbme /gitee-pages-action&lt;/a&gt; 根据注释就行配置即可。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;gitee-sync.yml&lt;/code&gt;  用于同步 &lt;code&gt;github pages&lt;/code&gt;  同步到 &lt;code&gt;gitee pages&lt;/code&gt;  可自动更新 &lt;code&gt;gitee pages&lt;/code&gt;  无需  &lt;code&gt;gitee pages pro&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&#34;第四步-自定义部署&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第四步-自定义部署&#34;&gt;#&lt;/a&gt; 第四步 自定义部署&lt;/h3&gt;
&lt;p&gt;默认使用 anzhiyu 主题，可自行更换。&lt;/p&gt;
&lt;p&gt;安装 hexo 主题或依赖请修改  &lt;code&gt;blog-update.yml&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;构建博客静态文件前后指令添加请修改 &lt;code&gt;script/generate.sh&lt;/code&gt; 。&lt;/p&gt;
&lt;h2 id=&#34;预览&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#预览&#34;&gt;#&lt;/a&gt; 预览&lt;/h2&gt;
&lt;p&gt;博客预览： &lt;a href=&#34;https://haysalan.github.io/&#34;&gt;https://haysalan.github.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;博客模板：&lt;a href=&#34;https://github.com/haysalan/hexo-yuque-template&#34;&gt;https://github.com/haysalan/hexo-yuque-template&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;github：&lt;a href=&#34;https://github.com/Alanhays&#34;&gt;https://github.com/Alanhays&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/52888.html</guid>
            <title>精选网络资源&amp;疑难杂症记录</title>
            <link>https://alanhays.github.io/posts/52888.html</link>
            <pubDate>Tue, 09 Jan 2024 01:49:31 +0000</pubDate>
            <description><![CDATA[ &lt;hr&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;% note blue &amp;#x27;anzhiyufont anzhiyu-icon-bullhorn&amp;#x27; simple %&amp;#125;需要什么可在下方评论，如找到会新增，不定期更;所有资源均来自网络收集，如有侵权联系我删除！&amp;#123;% endnote %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;windows&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#windows&#34;&gt;#&lt;/a&gt; windows&lt;/h1&gt;
&lt;h2 id=&#34;日常使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#日常使用&#34;&gt;#&lt;/a&gt; 日常使用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2024/zip/26634545/1704765044646-25a0ada4-36ca-491f-a60b-afb585380df3.zip&#34;&gt;360 驱动大师纯净版 2.0.0.2000.exe.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2024/zip/26634545/1704776048633-de6865e1-be62-42b4-b50e-68d964d9ce2a.zip&#34;&gt;PixPin_1.0.9.1_Setup - 截图工具.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2024/zip/26634545/1704776019834-334f8283-323b-4e2a-ad7f-4ab9a8c5b5bb.zip&#34;&gt;右键菜单编辑工具.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2024/zip/26634545/1704776226192-d1024849-e60a-40af-bd1d-55fc0d71aa47.zip&#34;&gt;图吧工具箱.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2024/zip/26634545/1704776088072-7098a3e0-62fd-48bc-a876-77b9aab8ec56.zip&#34;&gt;window 关闭自动更新.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2024/zip/26634545/1704776254996-5ec014dd-0758-4eea-9bce-0cbbcecf8f81.zip&#34;&gt;TrafficMonitor - 任务栏信息.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2024/zip/26634545/1711591386343-c79dc842-0028-4620-9e2f-96d93a333b24.zip&#34;&gt;IDM-Activation-Script-zh-cn.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2024/zip/26634545/1711593099973-427b2cab-b8c7-407d-889f-222a3eb74f99.zip&#34;&gt;Clash-0.20.39.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2024/zip/26634545/1711598531899-a66c67c7-dd2d-4a64-aa30-5b58f22e7ddc.zip&#34;&gt;3DP_Net_v2101 - 离线网卡驱动安装.zip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;逆向开发&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#逆向开发&#34;&gt;#&lt;/a&gt; 逆向开发&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2024/zip/26634545/1704770622403-d0dc9dac-3a92-4c08-a06b-873ef5fb731e.zip&#34;&gt;IDA_Pro_v8.3_Portable.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2024/zip/26634545/1704776071506-ab96b9d0-a969-4fad-b7b1-cbdaf9af07dd.zip&#34;&gt;IDA_Pro_v7.5_Portable.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2024/zip/26634545/1704776118713-bd340794-01cb-424b-8644-cf932d436be2.zip&#34;&gt;TyporaCrack-main.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2024/zip/26634545/1704775949699-67598aea-409b-4f8a-99ca-7eff220dc472.zip&#34;&gt;adb-fastboot.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2024/zip/26634545/1704775985265-41a9a7d0-c609-4676-a69a-36de24e21f73.zip&#34;&gt;jadx-1.4.7.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2024/zip/26634545/1704776136039-dc6dbf22-4202-40bc-aac1-431b79320713.zip&#34;&gt;GDA3.97pro_patch.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2024/zip/26634545/1704776287514-a7eeb37b-b4a5-4258-9513-e95c7b557987.zip&#34;&gt;jetbra-IDE 激活.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2024/zip/26634545/1704776355152-36a2bfde-66bb-4869-a7cc-c0ba8b64c7d0.zip&#34;&gt;fastgithub_win-x64-github 加速.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2024/zip/26634545/1711509110961-12386a43-96e6-4c50-8678-e93d1953e792.zip&#34;&gt;ReRes_JS 替换.zip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;镜像文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#镜像文件&#34;&gt;#&lt;/a&gt; 镜像文件&lt;/h2&gt;
&lt;h2 id=&#34;疑难杂症&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#疑难杂症&#34;&gt;#&lt;/a&gt; 疑难杂症&lt;/h2&gt;
&lt;h1 id=&#34;linux&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux&#34;&gt;#&lt;/a&gt; Linux&lt;/h1&gt;
&lt;h2 id=&#34;疑难杂症-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#疑难杂症-2&#34;&gt;#&lt;/a&gt; 疑难杂症&lt;/h2&gt;
&lt;h3 id=&#34;font-stylecolorrgb25-27-31vmware-虚拟机fontubuntu-网络图标消失-bug&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb25-27-31vmware-虚拟机fontubuntu-网络图标消失-bug&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(25, 27, 31);&#34;&gt;Vmware 虚拟机&lt;/font&gt;Ubuntu 网络图标消失 Bug&lt;/h3&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo nmcli network off&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sudo nmcli network on&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/50605.html</guid>
            <title>破解tap验证和绕过实名认证</title>
            <link>https://alanhays.github.io/posts/50605.html</link>
            <pubDate>Wed, 03 Jan 2024 10:13:01 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;tags: [‘入门级’]&lt;br&gt;
 categories: ‘逆向分析’&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;案例目标&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#案例目标&#34;&gt;#&lt;/a&gt; 案例目标&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;去除账号验证&lt;/li&gt;
&lt;li&gt;去除实名认证&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;环境准备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境准备&#34;&gt;#&lt;/a&gt; 环境准备&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;MT 管理器 / NP 管理器&lt;/li&gt;
&lt;li&gt;JEB/jadx（非必须）&lt;/li&gt;
&lt;li&gt;模拟器 / 安卓手机&lt;/li&gt;
&lt;li&gt;root （否）&lt;/li&gt;
&lt;li&gt;目标 APP&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;破解步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#破解步骤&#34;&gt;#&lt;/a&gt; 破解步骤&lt;/h2&gt;
&lt;h3 id=&#34;绕过账号验证&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绕过账号验证&#34;&gt;#&lt;/a&gt; 绕过账号验证&lt;/h3&gt;
&lt;p&gt;开启 MT 管理器的 Activity 记录功能&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/26634545/1671602359155-c9ae5dc8-85b5-4231-94fb-a928eebcc0c3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;启动成功后打开我们需要破解的 APP，他会启动游戏平台验证账号，我们回到游戏就会看到下面的页面。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/26634545/1671602498061-e1426d46-45a5-4fac-8ebb-49e5ec366acb.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入 MT 管理器查看记录，最后的一个活动是 com.txxxxx.pay.sdk.library.TxxAlertDialog$1，那我们从它开始入手。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/26634545/1671602303415-c37264f8-df26-4454-8352-0e8e41a313b3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;找到这个类 com.txxxxx.pay.sdk.library.TxxAlertDialog&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/26634545/1671602871407-6ceb3b75-f65e-4c41-a429-95200bfad7db.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们得到 new 它的地方。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/26634545/1671604604483-60b1bd9d-b7cc-4af6-bf09-65691a2f9037.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入并分析一下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/26634545/1671604759903-d6ad0476-9c68-4d05-8aac-7d5923ba3f27.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;搜索一下哪里调用了销毁弹窗，验证通过必定需要销毁，找起来更快。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/26634545/1671604904388-35ec8f2a-0648-4fd1-89b0-2c81b69bf9bf.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入分析一下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/26634545/1671605052168-84dd2bde-fb9f-473e-b107-f74923303f3e.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;看看哪里还个调用了&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/26634545/1671605447575-ce5982d8-35b3-43ef-9d78-260b576d4406.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;这里我验证过了，修改它们即可去除验证。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/26634545/1671605720530-3d2f6cd3-821d-4a38-9577-472b65688caa.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;快速定位关键字 &lt;code&gt;checkLicense = licensed&lt;/code&gt;  (不出意外只有一个结果)&lt;/p&gt;
&lt;p&gt;然后搜索定位函数 checkLicense&lt;/p&gt;
&lt;p&gt;在&lt;font style=&#34;color:#DF2A3F;&#34;&gt;smali&lt;/font&gt;代码中修改对应的值就能去除验证了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/26634545/1671532241058-89eb95d0-d5a6-4f7d-81c1-cdbc7457985b.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;重新签名安装后启动看看效果吧。&lt;/p&gt;
&lt;h3 id=&#34;绕过实名认证&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绕过实名认证&#34;&gt;#&lt;/a&gt; 绕过实名认证&lt;/h3&gt;
&lt;p&gt;开启 MT 管理器的&lt;font style=&#34;color:#E4495B;&#34;&gt;Activity 记录&lt;/font&gt;功能，然后启动 APP 弹出实名弹窗之后回到 MT 管理器，可以看到只有一个 Activity -&amp;gt;  &lt;code&gt;com.lixxthgame.abi.UnityPlayerActivity&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/26634545/1671588848878-0441652c-c8a9-49fa-b4b6-b8e7486d6fed.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 UnityPlayerActivity 中并没发现什么可疑的地方，那就得找新的办法了。&lt;/p&gt;
&lt;p&gt;我们来试试新的关键字 “identify”，需要实名认证，估计会使用这个单词。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/26634545/1671593032964-ab95b599-8b44-4474-a4fb-6bfb0b60ecca.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;看看这个 IdentifyHelp 类是干什么用的。&lt;/p&gt;
&lt;p&gt;IdentifyHelp 中有个方法 CompareTimeUp18 翻译过来就是 对比年龄到 18（估计是用出生日期和当前时间对比）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/26634545/1671593371902-50de2adf-4bde-4121-8ec3-741a4df678aa.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;看看那些地方调用了 CompareTimeUp18&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/26634545/1671593917788-ab9501b3-bda6-4746-aabf-699cbb8c4681.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择第一个，进入到方法 antiAddication，分析一下。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/26634545/1671595264762-5395591c-b7fa-42f5-b365-4d8dc36208e1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入 setBigMan 或 setIdenfity 中&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/26634545/1671594735893-520b3df9-6c33-41b1-8eba-59e9feab47ba.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;将 isBigMan 和 isIdenfity 的初始值置为 true 即可去实名认证了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/26634545/1671591338615-f3e424d9-7255-40c5-b067-160fd53e9272.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在&lt;font style=&#34;color:#DF2A3F;&#34;&gt;smali&lt;/font&gt;代码中修改对应的值就能去除验证了。&lt;/p&gt;
&lt;p&gt;快速定位关键字  &lt;code&gt;LoaclUser&amp;#123;name=&lt;/code&gt;  (不出意外只有一个结果)&lt;/p&gt;
&lt;p&gt;搜索定位 isIdenfity&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2022/png/26634545/1671591845525-464035cb-38f4-480d-8e91-8375683bb4a5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/38694.html</guid>
            <title>Build Nodejs 环境配置</title>
            <link>https://alanhays.github.io/posts/38694.html</link>
            <pubDate>Wed, 03 Jan 2024 07:34:02 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;tags: [‘nodejs’,‘build’]&lt;br&gt;
 categories: ‘经验教程’&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;对于 js 补浏览器环境时遇到一些 js 无法实现的环境，那么就需要修改 node 源码来实现，本文简单复述一下 Build Node 所需要的环境及配置，推荐直接看&lt;a href=&#34;https://github.com/nodejs/node/blob/HEAD/BUILDING.md&#34;&gt;官方文档&lt;/a&gt;。&lt;/p&gt;
&lt;h1 id=&#34;windows-1011&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#windows-1011&#34;&gt;#&lt;/a&gt; windows 10/11&lt;/h1&gt;
&lt;h2 id=&#34;环境准备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境准备&#34;&gt;#&lt;/a&gt; 环境准备&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/nodejs/node/blob/main/BUILDING.md#windows&#34;&gt;windows 部分官方教程（推荐）&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;一-python-环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一-python-环境&#34;&gt;#&lt;/a&gt; 一、Python 环境&lt;/h3&gt;
&lt;p&gt;安装好 python 并且配置环境变量，官网下载（&lt;a href=&#34;https://www.python.org/downloads/&#34;&gt;点击下载&lt;/a&gt;）我使用的版本是 3.8.0，低版本不知道是否可用，如果第一次安装 Python 建议安装 3.8.0 及以上。&lt;/p&gt;
&lt;p&gt;如果下载速度慢，可点击&lt;a href=&#34;https://surans.lanzouw.com/b00y05wvi&#34;&gt;链接（密码：h85c）&lt;/a&gt;下载我拷贝到蓝奏云文件。&lt;/p&gt;
&lt;h3 id=&#34;font-stylecolorrgb31-35-40二-visual-studio-installerfont&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb31-35-40二-visual-studio-installerfont&#34;&gt;#&lt;/a&gt; &lt;strong&gt;&lt;font style=&#34;color:rgb(31, 35, 40);&#34;&gt;二、Visual Studio Installer&lt;/font&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;安装 C++/.NET 环境有两个可选方案&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1. 安装&lt;a href=&#34;https://visualstudio.microsoft.com/downloads/&#34;&gt; Visual Studio 2022&lt;/a&gt; &lt;font style=&#34;color:rgb(51, 51, 51);&#34;&gt;并且勾选 “使用 C++ 进行桌面开发” 和 “.NET 桌面生成工具” 进行环境安装。(推荐)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2024/png/26634545/1704271697464-b1f8bde9-2952-4f6c-91a2-87734409773a.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;2. 安装&lt;a href=&#34;https://aka.ms/vs/17/release/vs_buildtools.exe&#34;&gt;构建工具&lt;/a&gt;&lt;font style=&#34;color:rgb(51, 51, 51);&#34;&gt;打开后自动安装 “C++ 构建工具” 环境等待安装完成后打开 &lt;/font&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(31, 35, 40);&#34;&gt;Visual Studio Installer&lt;/font&gt;&lt;/strong&gt;&lt;font style=&#34;color:rgb(31, 35, 40);&#34;&gt; 勾选&lt;/font&gt;&lt;font style=&#34;color:rgb(51, 51, 51);&#34;&gt;“.NET 桌面生成工具” 进行环境安装。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2024/png/26634545/1704270358817-7e442e02-b5b5-4901-82d1-525aa2c60c9c.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;font-stylecolorrgb51-51-51三-netwide-汇编程序font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb51-51-51三-netwide-汇编程序font&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(51, 51, 51);&#34;&gt;三、NetWide 汇编程序&lt;/font&gt;&lt;/h3&gt;
&lt;p&gt;点击&lt;a href=&#34;https://www.nasm.us/pub/nasm/releasebuilds/2.16.02rc6/win64/&#34;&gt;这里&lt;/a&gt;下载后安装即可，安装是一直点 next 即可。&lt;/p&gt;
&lt;p&gt;我安装的版本是&lt;a href=&#34;https://www.nasm.us/pub/nasm/releasebuilds/2.16.02rc6/win64/nasm-2.16.02rc6-installer-x64.exe&#34;&gt; nasm-2.16.02rc6&lt;/a&gt;，其他版本选择点击&lt;a href=&#34;https://www.nasm.us/pub/nasm/releasebuilds&#34;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2024/png/26634545/1704272184220-9e9a3c78-f713-4c5e-ac47-d953d32b9b6c.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;下载-node-源码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下载-node-源码&#34;&gt;#&lt;/a&gt; 下载 Node 源码&lt;/h2&gt;
&lt;p&gt;官方教程使用 &lt;font style=&#34;color:rgb(31, 35, 40);&#34;&gt;Git Bash 来进行下载，&lt;/font&gt;&lt;a href=&#34;https://git-scm.com/download/win&#34;&gt; Git for Windows&lt;/a&gt; 下载安装。记得配置环境变量。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git clone https://github.com/nodejs/node.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd node&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(31, 35, 40);&#34;&gt;由于 node 源码 400m 比较大，我选择进入&lt;/font&gt;&lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;Nodejs 官网&lt;/a&gt;进行源码下载，当然使用你喜欢的方式即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2024/png/26634545/1704273537999-f71a2be0-54f9-463b-aa21-aa82b1e13aaf.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;build-node&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#build-node&#34;&gt;#&lt;/a&gt; Build Node&lt;/h2&gt;
&lt;p&gt;进入到 node 源码根目录，例如我这里需要进入到 &lt;code&gt;nodes/node-v20.10.0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2024/png/26634545/1704272480903-a4072940-1d9a-4ae7-a0da-3b8b34a56cfc.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(51, 51, 51);&#34;&gt;开始构建&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(51, 51, 51);&#34;&gt;构建后会在&lt;/font&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(51, 51, 51);&#34;&gt;Release&lt;/font&gt;&lt;/strong&gt;&lt;font style=&#34;color:rgb(51, 51, 51);&#34;&gt;文件夹下生成构建好的&lt;/font&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(51, 51, 51);&#34;&gt;node.exe&lt;/font&gt;&lt;/strong&gt;&lt;font style=&#34;color:rgb(51, 51, 51);&#34;&gt;文件&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.\vcbuild&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;进行测试&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.\vcbuild test&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(51, 51, 51);&#34;&gt;测试 Node.js 是否正确构建&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Release\node -e &amp;quot;console.log(&amp;#x27;Hello from Node.js&amp;#x27;, process.version)&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/60184.html</guid>
            <title>学习逆向过程中的一些问题与其解决办法</title>
            <link>https://alanhays.github.io/posts/60184.html</link>
            <pubDate>Mon, 25 Dec 2023 08:59:43 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;tags: [‘思路’]&lt;br&gt;
 categories: ‘经验教程’&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;sticky: ‘9’&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;学习逆向过程中的一些问题与其解决办法，当然还有大佬们文章内提到的，整理出来方便翻阅，持续更新。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;% tip key %&amp;#125;当然大家有什么问题也可在下方评论，如有解决本文问题的方法还请不吝赐教，在此感谢鞠躬！&amp;#123;% endtip %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;参考资料&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#参考资料&#34;&gt;#&lt;/a&gt; 参考资料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/qq_38851536/category_11102404.html?spm=1001.2014.3001.5482&#34;&gt;白龙 - SO 逆向实战十三篇&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;资源工具&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#资源工具&#34;&gt;#&lt;/a&gt; 资源工具&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gchq.github.io/CyberChef&#34;&gt;CyberChef - 用于加密，编码，压缩和数据分析&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://armconverter.com/&#34;&gt;armconverter - ARM-HEX 转换器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/r0ysue/r0capture&#34;&gt;r0capture - 安卓应用层抓包通杀脚本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/maiyao1988/ExAndroidNativeEmu&#34;&gt;ExAndroidNativeEmu - Python 工具 Unidbg 青春版功能有限&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Pr0214/findhash&#34;&gt;findhash - IDA 脚本 可以检测出哈希算法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/sml2h3/ddddocr&#34;&gt;ddddocr - Python 库 通用验证码识别库&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;ida&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ida&#34;&gt;#&lt;/a&gt; IDA&lt;/h1&gt;
&lt;h2 id=&#34;通过-jni_onload-定位-native-函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#通过-jni_onload-定位-native-函数&#34;&gt;#&lt;/a&gt; 通过 JNI_OnLoad 定位 Native 函数&lt;/h2&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;% tip info %&amp;#125;仅限没有经过混淆或加密处理的样本&amp;#123;% endtip %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/gif/26634545/1702550232510-9c4a4843-75f5-4fce-a183-770783c0dddb.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;python&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#python&#34;&gt;#&lt;/a&gt; Python&lt;/h1&gt;
&lt;h2 id=&#34;python-能不能调用-so-文件的-native-方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#python-能不能调用-so-文件的-native-方法&#34;&gt;#&lt;/a&gt; Python 能不能调用 so 文件的 Native 方法？&lt;/h2&gt;
&lt;p&gt;Python 也有类似 Unidbg 的工具&lt;a href=&#34;https://github.com/maiyao1988/ExAndroidNativeEmu&#34;&gt; ExAndroidNativeEmu - Python 工具 Unidbg 青春版功能有限&lt;/a&gt;，但是&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;仅限于对&lt;/font&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;JAVA 层的交互极少&lt;/font&gt;&lt;/strong&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;，一旦涉及到 JNI 交互，则需要果断选择 Unidbg，在 Python 中补 JAVA 的逻辑，简直不是人该受的委屈。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;&lt;/font&gt;&lt;/p&gt;
&lt;h1 id=&#34;密码学&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#密码学&#34;&gt;#&lt;/a&gt; 密码学&lt;/h1&gt;
&lt;h2 id=&#34;加密算法大概率是开源或者魔改算法有没有快速验证的方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#加密算法大概率是开源或者魔改算法有没有快速验证的方法&#34;&gt;#&lt;/a&gt; 加密算法大概率是开源或者魔改算法有没有快速验证的方法？&lt;/h2&gt;
&lt;p&gt;当在分析过程中有猜测或怀疑是某加密算法时可以使用类似&lt;a href=&#34;https://github.com/Pr0214/findhash&#34;&gt; findhash - IDA 脚本 可以检测出哈希算法&lt;/a&gt;的脚本，此脚本可检测&lt;font style=&#34;color:rgb(31, 35, 40);&#34;&gt;无论是否魔改常数的 hash 算&lt;/font&gt;法 MD5，SHA1、SHA2。&lt;/p&gt;
&lt;h1 id=&#34;汇编指令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#汇编指令&#34;&gt;#&lt;/a&gt; 汇编指令&lt;/h1&gt;
&lt;h2 id=&#34;font-stylecolorrgb77-77-77arm32-有-thumb-和-arm-两种指令模式如何确定font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb77-77-77arm32-有-thumb-和-arm-两种指令模式如何确定font&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;ARM32 有 Thumb 和 ARM 两种指令模式如何确定？&lt;/font&gt;&lt;/h2&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;最粗暴的方式就是试错法&lt;/font&gt;&lt;font style=&#34;color:rgb(0, 119, 170);&#34;&gt;module&lt;/font&gt;&lt;font style=&#34;color:rgb(153, 153, 153);&#34;&gt;.&lt;/font&gt;&lt;font style=&#34;color:rgb(221, 74, 104);&#34;&gt;callFunction&lt;/font&gt;时不加 1&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;会报错非法指令则表示是 Thumb 模式&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;第二个办法是从知识角度出发，ARM 模式指令总是 4 字节长度，Thumb 指令长度多数为 2 字节，少部分指令是 4 字节。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;&lt;/font&gt;&lt;/p&gt;
&lt;h1 id=&#34;font-stylecolorrgb77-77-77unidbgfont&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb77-77-77unidbgfont&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;Unidbg&lt;/font&gt;&lt;/h1&gt;
&lt;h2 id=&#34;font-stylecolorrgb24-25-26background-colorrgb254-254-254unidbg-的-jnionload-加载出的类是乱码font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb24-25-26background-colorrgb254-254-254unidbg-的-jnionload-加载出的类是乱码font&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(24, 25, 26);background-color:rgb(254, 254, 254);&#34;&gt;Unidbg 的 Jnionload 加载出的类是乱码？&lt;/font&gt;&lt;/h2&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;so 做了字符串的混淆或加密，以此来对抗分析人员，但字符串总是要解密的，不然怎么用呢？这个解密一般发生在 Init array 节或者 JNI OnLoad 中，又或者是该字符串使用前的任何一个时机&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(0, 0, 0);background-color:rgb(254, 254, 254);&#34;&gt;&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&#34;font-stylecolorrgb77-77-77对虚拟内存进行修改font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb77-77-77对虚拟内存进行修改font&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;对虚拟内存进行修改&lt;/font&gt;&lt;/h2&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;Unidbg 提供了两种方法打 Patch，简单的需求可以调用 Unicorn 对虚拟内存进行修改，如下&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;public void patchVerify()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int patchCode = 0x4FF00100; //&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    emulator.getMemory().pointer(module.base + 0x1E86).setInt(0,patchCode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;% tip warning %&amp;#125;需要注意的是，这儿地址可别+1了，Thumb的+1只在运行和Hook时需要考虑，打Patch可别想。&amp;#123;% endtip %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&#34;font-stylecolorrgb77-77-77补环境怎么补补什么font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb77-77-77补环境怎么补补什么font&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;补环境怎么补补什么？&lt;/font&gt;&lt;/h2&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;我们既可以根据报错提示，在 AbstractJni 对应的函数体内，依葫芦画瓢，case &amp;quot;xxx“。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;也可以在我们的 zuiyou 类中补，因为 zuiyou 类继承了 AbstractJNI。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;关于补法，有两种实践方法都很有道理&lt;/font&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font style=&#34;color:rgba(0, 0, 0, 0.75);&#34;&gt;全部在用户类中补，防止项目迁移或者 Unidbg 更新带来什么问题，这样做代码的移植性比较好。&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:rgba(0, 0, 0, 0.75);&#34;&gt;自定义 JAVA 方法在用户类中补，通用的方法在 AbstractJNI 中补，这样做的好处是，之后运行的项目如果调用通用方法，就不用做重复的修补工作。&lt;/font&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;font-stylecolorrgb77-77-77如何主动调用一个-native-函数font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb77-77-77如何主动调用一个-native-函数font&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;如何主动调用一个 Native 函数&lt;/font&gt;&lt;/h2&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;在 Frida 中可以使用 NativeFunction API 主动调用&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;function call_65540(base_addr)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 函数在内存中的地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var real_addr = base_addr.add(0x65541)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var md5_function = new NativeFunction(real_addr, &amp;quot;int&amp;quot;, [&amp;quot;pointer&amp;quot;, &amp;quot;int&amp;quot;, &amp;quot;pointer&amp;quot;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 参数1 明文字符串的指针&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var input = &amp;quot;r0ysue&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var arg1 = Memory.allocUtf8String(input);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 参数2 明文长度&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var arg2 = input.length;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 参数3，存放结果的buffer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var arg3 = Memory.alloc(16);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    md5_function(arg1, arg2, arg3);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    console.log(hexdump(arg3,&amp;#123;length:0x10&amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;function callMd5()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 确定SO 的基地址&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    var base_addr = Module.findBaseAddress(&amp;quot;libnet_crypto.so&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    call_65540(base_addr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;// frida -UF -l path\hookright.js&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;在 Unidbg 也是类似的，只不过换一下 API 罢了，让我们来看一下&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;public void callMd5()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    List&amp;lt;Object&amp;gt; list = new ArrayList&amp;lt;&amp;gt;(10);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // arg1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    String input = &amp;quot;r0ysue&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // malloc memory&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    MemoryBlock memoryBlock1 = emulator.getMemory().malloc(16, false);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // get memory pointer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    UnidbgPointer input_ptr=memoryBlock1.getPointer();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // write plainText on it&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    input_ptr.write(input.getBytes(StandardCharsets.UTF_8));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // arg2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    int input_length = input.length();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // arg3 -- buffer&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    MemoryBlock memoryBlock2 = emulator.getMemory().malloc(16, false);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    UnidbgPointer output_buffer=memoryBlock2.getPointer();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // 填入参入&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    list.add(input_ptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    list.add(input_length);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    list.add(output_buffer);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // run&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    module.callFunction(emulator, 0x65540 + 1, list.toArray());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    // print arg3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Inspector.inspect(output_buffer.getByteArray(0, 0x10), &amp;quot;output&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;需要注意，在 Unidbg 中，同样的功能有至少两种实现和写法 ——Unicorn 的原生方法以及 Unidbg 封装后的方法，在阅读别人代码时需要灵活变通。就好比 &lt;/font&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;getR0long&lt;/font&gt;&lt;/strong&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt; 和&lt;/font&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;emulator.getBackend().reg_read(ArmConst.UC_ARM_REG_R0)&lt;/font&gt;&lt;/strong&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;，它们都是获取寄存器 R0 的数值。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&#34;font-stylecolorrgb77-77-77jnitrace-trace-我们在参数还没完全转换完的情况下unidbg-就退出了font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb77-77-77jnitrace-trace-我们在参数还没完全转换完的情况下unidbg-就退出了font&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;JNItrace trace 我们在参数还没完全转换完的情况下，Unidbg 就退出了&lt;/font&gt;&lt;/h2&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;这种情况下，可能的原因有很多，但可能性较大的是两个&lt;/font&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font style=&#34;color:rgba(0, 0, 0, 0.75);&#34;&gt;上下文环境缺失&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:rgba(0, 0, 0, 0.75);&#34;&gt;样本使用某种手段检测或反制了 Unidbg&lt;/font&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;先看一下是否是上下文的问题，假设是上下文缺失，通俗的讲就是在 SO 加载后到我们的 main 函数调用前的这段时间里，样本需要调用一些函数对 SO 进行初始化，而我们没有注意也没做这个事，这导致了 Unidbg 无法顺利运行。&lt;/font&gt;&lt;/p&gt;
&lt;h1 id=&#34;font-stylecolorrgb77-77-77抓包font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb77-77-77抓包font&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;抓包&lt;/font&gt;&lt;/h1&gt;
&lt;h2 id=&#34;对于服务器校验证书如何抓包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#对于服务器校验证书如何抓包&#34;&gt;#&lt;/a&gt; 对于服务器校验证书如何抓包？&lt;/h2&gt;
&lt;p&gt;安卓可以使用&lt;a href=&#34;https://github.com/r0ysue/r0capture&#34;&gt; r0capture - 安卓应用层抓包通杀脚本&lt;/a&gt;进行抓包分析。&lt;/p&gt;
&lt;h1 id=&#34;验证码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#验证码&#34;&gt;#&lt;/a&gt; 验证码&lt;/h1&gt;
&lt;h2 id=&#34;遇到验证码验证怎么办&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#遇到验证码验证怎么办&#34;&gt;#&lt;/a&gt; 遇到验证码验证怎么办？&lt;/h2&gt;
&lt;p&gt;可以使用&lt;a href=&#34;https://github.com/sml2h3/ddddocr&#34;&gt; ddddocr - Python 库 通用验证码识别库&lt;/a&gt;进行识别，支持老版验证码，当前验证码支持部分滑块文字点选等。&lt;/p&gt;
&lt;h1 id=&#34;解混淆反编译对抗&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解混淆反编译对抗&#34;&gt;#&lt;/a&gt; 解混淆 &amp;amp; 反编译对抗&lt;/h1&gt;
&lt;h2 id=&#34;ai-如何赋能解混淆研究&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ai-如何赋能解混淆研究&#34;&gt;#&lt;/a&gt; AI 如何赋能解混淆研究？&lt;/h2&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(6, 6, 7);&#34;&gt;在代码混淆对抗中，如果要训练一个模型来识别 AST JSON 数据中的混淆特征，可以考虑使用以下几种算法：&lt;/font&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(6, 6, 7);&#34;&gt;机器学习算法&lt;/font&gt;&lt;/strong&gt;&lt;font style=&#34;color:rgb(6, 6, 7);&#34;&gt;：可以使用监督学习算法，如支持向量机（SVM）或随机森林，这些算法可以学习混淆代码和正常代码之间的模式差异。首先需要有一个标记好的特征数据集来训练模型，然后使用训练好的模型对新的代码样本进行分类和识别。&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(6, 6, 7);&#34;&gt;深度学习算法&lt;/font&gt;&lt;/strong&gt;&lt;font style=&#34;color:rgb(6, 6, 7);&#34;&gt;：特别是卷积神经网络（CNN）或循环神经网络（RNN），这些网络能够处理序列数据并识别复杂的模式。对于处理 AST 这种树状结构的数据，图神经网络（GNN）可能是一个更合适的选择，因为它们能够更好地处理图结构数据中的依赖关系。&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(6, 6, 7);&#34;&gt;自然语言处理算法&lt;/font&gt;&lt;/strong&gt;&lt;font style=&#34;color:rgb(6, 6, 7);&#34;&gt;：尽管 AST 不是自然语言，但可以使用 BERT 等预训练的语言模型来学习代码的语义表示，进而识别混淆模式。这些模型已经在自然语言处理领域显示出强大的能力，并且可以适应不同的语言和结构化数据。&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(6, 6, 7);&#34;&gt;基于规则的方法&lt;/font&gt;&lt;/strong&gt;&lt;font style=&#34;color:rgb(6, 6, 7);&#34;&gt;：可以设计一套规则系统来检测常见的混淆技术，如变量名和函数名的重命名、控制流的改变等。这种方法可能需要专业知识来定义混淆的特征和规则。&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(6, 6, 7);&#34;&gt;AST 分析工具&lt;/font&gt;&lt;/strong&gt;&lt;font style=&#34;color:rgb(6, 6, 7);&#34;&gt;：可以使用现成的 AST 分析工具，如 Babel 或 Esprima，来解析和分析 JavaScript 代码。这些工具可以帮助识别代码中的模式和潜在的混淆技术，并可能结合机器学习算法来提高识别的准确性。&lt;/font&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(6, 6, 7);&#34;&gt;在选择算法时，需要考虑数据的规模、特征的复杂性以及所需的准确性。同时，混淆技术的不断进步也要求模型能够适应新的混淆手段。通过结合多种算法和工具，可以更有效地识别和对抗代码混淆。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(6, 6, 7);&#34;&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(6, 6, 7);&#34;&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(6, 6, 7);&#34;&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(6, 6, 7);&#34;&gt;云梯密码 VWzMDAwrm3s!6xx&lt;/font&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/42317.html</guid>
            <title>android证书安装与校验相关解决办法</title>
            <link>https://alanhays.github.io/posts/42317.html</link>
            <pubDate>Mon, 25 Dec 2023 06:17:05 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;tags: [‘证书’,‘magisk’]&lt;br&gt;
 categories: ‘经验教程’&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;android-安装证书&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#android-安装证书&#34;&gt;#&lt;/a&gt; Android 安装证书&lt;/h1&gt;
&lt;h2 id=&#34;magisk-安装证书插件推荐&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#magisk-安装证书插件推荐&#34;&gt;#&lt;/a&gt; Magisk 安装证书插件（推荐）&lt;/h2&gt;
&lt;p&gt;Magisk 中安装插件并&lt;strong&gt;重启&lt;/strong&gt;，在手机&lt;strong&gt;设置&lt;/strong&gt;安全中&lt;strong&gt;正常手动安装&lt;/strong&gt;证书至&lt;strong&gt;用户证书&lt;/strong&gt;，接着&lt;strong&gt;重启&lt;/strong&gt;手机用户证书则会&lt;strong&gt;移动至系统&lt;/strong&gt;证书。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2023/zip/26634545/1703485160886-247fbe50-2bba-4cc0-a497-de50d632fce2.zip&#34;&gt;Move_Certificates-v1.9.zip&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;shell-命令安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#shell-命令安装&#34;&gt;#&lt;/a&gt; Shell 命令安装&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;操作证书相关命令&lt;/strong&gt;（kali 自带 openssl）&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看crt\der格式证书&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;openssl x509 -in FiddlerRoot.crt -inform DER -noout -text&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;查看pem证书&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;openssl x509 -in certificate.pem -inform pem -noout -text&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;crt/der转pem&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;openssl x509 -in FiddlerRoot.crt -inform DER -out certificate.pem -outform PEM&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;pem转der/crt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;openssl x509 -in certificate.pem -inform PEM -out FiddlerRoot.der -outform DER&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta prompt_&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;language-bash&#34;&gt;计算pem证书&lt;span class=&#34;built_in&#34;&gt;hash&lt;/span&gt;值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;openssl x509 -subject_hash_old -in Desktop.pem&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;导入到系统前需要&lt;strong&gt;重命名&lt;/strong&gt;证书 &lt;strong&gt;hash 值.0 -&amp;gt; xxxx.0&lt;/strong&gt;。如果存在文件名&lt;strong&gt;冲突&lt;/strong&gt;，则可将 &lt;code&gt;.0&lt;/code&gt;  改为 &lt;code&gt;.1&lt;/code&gt;  或 &lt;code&gt;.2&lt;/code&gt;  等等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;新开&lt;/strong&gt;一个 &lt;code&gt;cmd&lt;/code&gt;  执行以下命令&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;hash&lt;/strong&gt; 值通过&lt;strong&gt; pem&lt;/strong&gt; 证书计算得到（上面最后一条指令）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;adb root&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adb remount&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adb push xxxxxxx.0 /system/etc/security/cacerts/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adb shell&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd /system/etc/security/cacerts/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;chmod 644 xxxxxxx.0&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reboot&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/45467.html</guid>
            <title>android逆向分析环境配置</title>
            <link>https://alanhays.github.io/posts/45467.html</link>
            <pubDate>Wed, 20 Dec 2023 02:49:06 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;tags: [‘andorid’,‘fastboot’,‘magisk’,‘root’]&lt;br&gt;
 categories: ‘经验教程’&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;资源文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#资源文件&#34;&gt;#&lt;/a&gt; 资源文件&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(51, 51, 51);&#34;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;a href=&#34;https://www.yuque.com/attachments/yuque/0/2023/zip/26634545/1703052470975-a479d323-df18-42ff-853f-276c2131959a.zip&#34;&gt;adb-fastboot.zip&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;获取-root-权限&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获取-root-权限&#34;&gt;#&lt;/a&gt; 获取 root 权限&lt;/h1&gt;
&lt;h2 id=&#34;magisk&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#magisk&#34;&gt;#&lt;/a&gt; Magisk&lt;/h2&gt;
&lt;p&gt;magisk 中文网：&lt;a href=&#34;https://magiskcn.com/&#34;&gt;https://magiskcn.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;magisk 官网：&lt;a href=&#34;https://magiskmanager.com/&#34;&gt;https://magiskmanager.com/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境&#34;&gt;#&lt;/a&gt; 环境&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;解锁 Bootloader&lt;/li&gt;
&lt;li&gt;提取 boot.img (卡刷包中有)&lt;/li&gt;
&lt;li&gt;PC 端 **&lt;font style=&#34;color:rgb(51, 51, 51);&#34;&gt;adb-fastboot&lt;/font&gt;** 环境&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;修补 boot.img&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/gif/26634545/1703052109455-296af09d-fccf-4099-82e3-7dae58f608de.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;安装证书&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装证书&#34;&gt;#&lt;/a&gt; 安装证书&lt;/h1&gt;
&lt;p&gt;安装证书详细步骤：&lt;a href=&#34;/posts/42317.html&#34;&gt;android 证书安装与校验相关解决办法&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;问题记录&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#问题记录&#34;&gt;#&lt;/a&gt; 问题记录&lt;/h1&gt;
&lt;h2 id=&#34;小米-8-写入-boot-报错&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#小米-8-写入-boot-报错&#34;&gt;#&lt;/a&gt; 小米 8 写入 boot 报错&lt;/h2&gt;
&lt;h3 id=&#34;write-to-device-failed-invalid-argument&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#write-to-device-failed-invalid-argument&#34;&gt;#&lt;/a&gt; Write to device failed (Invalid argument)&lt;/h3&gt;
&lt;p&gt;报错详情 -&amp;gt;** **&lt;a href=&#34;https://blog.csdn.net/qq_39441603/article/details/124679556&#34;&gt; 原文地址&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;D:\user\Downloads\adb-fastboot&amp;gt;fastboot flash boot magisk_patched-26400_QSOWo.img&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Warning: skip copying boot image avb footer (boot partition size: 0, boot image size: 45851946).&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Sending &amp;#x27;boot&amp;#x27; (44777 KB)                          FAILED (Write to device failed (Invalid argument))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;fastboot: error: Command failed&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;新建文件 &lt;code&gt;txt&lt;/code&gt;  文件粘贴代码块内容，保存后修改后缀为 &lt;code&gt;bat&lt;/code&gt; ，以管理员方式运行。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;@echo off&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reg add &amp;quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\usbflags\18D1D00D0100&amp;quot; /v &amp;quot;osvc&amp;quot; /t REG_BINARY /d &amp;quot;0000&amp;quot; /f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reg add &amp;quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\usbflags\18D1D00D0100&amp;quot; /v &amp;quot;SkipContainerIdQuery&amp;quot; /t REG_BINARY /d &amp;quot;01000000&amp;quot; /f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;reg add &amp;quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\usbflags\18D1D00D0100&amp;quot; /v &amp;quot;SkipBOSDescriptorQuery&amp;quot; /t REG_BINARY /d &amp;quot;01000000&amp;quot; /f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pause&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行完后，执行写入 boot 成功。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1703040985764-924bd56a-4821-4b6f-afc5-67df9f4fe391.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/8117.html</guid>
            <title>Frida三板斧的安装配置与基本使用</title>
            <link>https://alanhays.github.io/posts/8117.html</link>
            <pubDate>Mon, 18 Dec 2023 07:59:47 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;tags: [‘frida’,‘jnitrace’,‘objection’]&lt;br&gt;
 categories: ‘经验教程’&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;frida&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#frida&#34;&gt;#&lt;/a&gt; Frida&lt;/h1&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(51, 51, 51);&#34;&gt;面向开发人员、逆向工程师和安全研究人员的动态检测工具包。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;frida 文档：&lt;a href=&#34;https://frida.re/docs/home/&#34;&gt;https://frida.re/docs/home/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;对应版本&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#对应版本&#34;&gt;#&lt;/a&gt; 对应版本&lt;/h2&gt;
&lt;p&gt;frida&amp;amp;frida-tools 版本对应查看 ：&lt;a href=&#34;https://github.com/frida/frida/releases&#34;&gt;frida-releases&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;找到你使用 frida 的版本，查看其版本下&lt;strong&gt; frida-tools&lt;/strong&gt; 的版本，它们就是对应版本。（建议多准备几个 Python 与 firda 的版本，因为它并不稳定）&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pip install frida==14.2.13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pip install frida-tools==9.2.1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/gif/26634545/1702889862515-455c0fb7-9dc7-4854-a6d6-c94c36b24e9e.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;frida-server&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#frida-server&#34;&gt;#&lt;/a&gt; frida-server&lt;/h2&gt;
&lt;p&gt;安卓手机需要安装 frida-server，版本与 frida&lt;strong&gt; 版本需一致&lt;/strong&gt;，根据&lt;strong&gt;设备架构&lt;/strong&gt;选择 x86 或 arm 等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;解压文件&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;7x x frida-server.xz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;启动 frida-server&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;adb root&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adb push frida-server /data/local/tmp/&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adb shell &amp;quot;chmod 755 /data/local/tmp/frida-server&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;adb shell &amp;quot;/data/local/tmp/frida-server&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;测试服务&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frida-ps -U  // 查看正在运行进程&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;显示如下内容则表示服务启动，手机&lt;strong&gt;重启&lt;/strong&gt;后&lt;strong&gt;需&lt;/strong&gt;要&lt;strong&gt;再次&lt;/strong&gt;执行命令&lt;strong&gt;启动&lt;/strong&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;  PID NAME&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; 1590 com.xxx.xxx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13194 com.xxxx.xxxxx&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;…&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;常用命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常用命令&#34;&gt;#&lt;/a&gt; 常用命令&lt;/h2&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;frida -FU packagename -l hookscript.js&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;font-stylecolorrgb79-79-79jnitracefont&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb79-79-79jnitracefont&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(79, 79, 79);&#34;&gt;Jnitrace&lt;/font&gt;&lt;/h1&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;JNItrace 是一个基于 Frida 框架的&lt;/font&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;Hook jni&lt;/font&gt;&lt;/strong&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;方法的库。&lt;/font&gt;&lt;a href=&#34;https://github.com/chame1eon/jnitrace&#34;&gt;https://github.com/chame1eon/jnitrace&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Python &lt;strong&gt;安装&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pip install jnitrace   &lt;span class=&#34;comment&#34;&gt;// 需要frida版本14以上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;font-stylecolorrgb70-70-70background-colorrgb253-253-253依赖font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb70-70-70background-colorrgb253-253-253依赖font&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(70, 70, 70);background-color:rgb(253, 253, 253);&#34;&gt;依赖：&lt;/font&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(70, 70, 70);background-color:rgb(253, 253, 253);&#34;&gt;arm、arm64、x86 或 x64 Android 设备&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(70, 70, 70);background-color:rgb(253, 253, 253);&#34;&gt;Frida 安装在 Android 设备上&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(70, 70, 70);background-color:rgb(253, 253, 253);&#34;&gt;Frida 支持 &amp;gt; 14&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(70, 70, 70);background-color:rgb(253, 253, 253);&#34;&gt;使用 Python 3 和 pip 的 Linux、Mac 或 Windows 主机&lt;/font&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;启动命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#启动命令&#34;&gt;#&lt;/a&gt; 启动命令：&lt;/h2&gt;
&lt;p&gt;两个参数分别为&lt;strong&gt;待分析的 SO&lt;/strong&gt; 与&lt;strong&gt; APP 包名&lt;/strong&gt;。-l 参数&lt;font style=&#34;color:rgb(70, 70, 70);background-color:rgb(253, 253, 253);&#34;&gt;可以多次使用 &lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(70, 70, 70);background-color:rgb(253, 253, 253);&amp;quot;&amp;gt;-l libname.so -l libname1.so ...&amp;lt;/font&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;jnitrace -l libname.so packagename&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;默认使用  &lt;code&gt;spawn&lt;/code&gt;  启动，可以通过  &lt;code&gt;-m attach&lt;/code&gt;  设置通过  &lt;code&gt;attach&lt;/code&gt;  启。&lt;/p&gt;
&lt;figure class=&#34;highlight latex&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;jnitrace -m attach -l libname.so packagename&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;  导出 log 日志保存至文件，控制台将不输出 log。&lt;/p&gt;
&lt;p&gt;例： &lt;code&gt;jnitrace -l libname packagename &amp;gt;&amp;gt; jnitrace.txt&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;objection&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#objection&#34;&gt;#&lt;/a&gt; objection&lt;/h1&gt;
&lt;h1 id=&#34;安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装&#34;&gt;#&lt;/a&gt; 安装&lt;/h1&gt;
&lt;p&gt;官方安装教程：&lt;a href=&#34;https://github.com/sensepost/objection/wiki/Installation&#34;&gt;https://github.com/sensepost/objection/wiki/Installation&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pip3 install -U objection&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在内存中所有已加载的类中搜索包含特定关键词的类&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;android hooking search classes&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;hook java 方法&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;android hooking watch class_method &amp;lt;methodName&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;hook java 类&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;android hooking watch class &amp;lt;classname&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(0, 0, 0);&#34;&gt;列出进程所有的 activity&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;android hooking list activities&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/41869.html</guid>
            <title>Frida相关API介绍</title>
            <link>https://alanhays.github.io/posts/41869.html</link>
            <pubDate>Mon, 18 Dec 2023 02:41:22 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;tags: [‘frida’]&lt;br&gt;
 categories: ‘经验教程’&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;静态实例方法-hook&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#静态实例方法-hook&#34;&gt;#&lt;/a&gt; 静态 &amp;amp; 实例方法 Hook&lt;/h1&gt;
&lt;p&gt;静态和实例方法的 hook 代码一致。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; className = &lt;span class=&#34;string&#34;&gt;&amp;quot;com.xxxx.xx&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; funcName = &lt;span class=&#34;string&#34;&gt;&amp;quot;func&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; classObject = &lt;span class=&#34;title class_&#34;&gt;Java&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;use&lt;/span&gt;(className);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 静态和实例方法的hook代码一致&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;classObject[funcName].&lt;span class=&#34;property&#34;&gt;implementation&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;x&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;className&amp;#125;&lt;/span&gt; -&amp;gt; call &lt;span class=&#34;subst&#34;&gt;$&amp;#123;funcName&amp;#125;&lt;/span&gt; - param: `&lt;/span&gt;, x);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  x = &lt;span class=&#34;string&#34;&gt;&amp;quot;param&amp;quot;&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;// 修改参数 除基础类型外其他类型需要自行构造。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; result = &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;[funcName](x);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// result = &amp;quot;param&amp;quot;;  // 修改返回值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;font-stylecolorrgb79-79-79构造方法的-hook-initfont&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb79-79-79构造方法的-hook-initfont&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(79, 79, 79);&#34;&gt;构造方法的 hook ($init)&lt;/font&gt;&lt;/h1&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; classObject = &lt;span class=&#34;title class_&#34;&gt;Java&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;use&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;com.xxx.xx&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;classObject.&lt;span class=&#34;property&#34;&gt;$init&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;implementation&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;a, b&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;className&amp;#125;&lt;/span&gt; -&amp;gt; call $init - param: `&lt;/span&gt;, a, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;.$init(a, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/43239.html</guid>
            <title>charles移动&amp;PC抓包配置</title>
            <link>https://alanhays.github.io/posts/43239.html</link>
            <pubDate>Thu, 14 Dec 2023 05:59:32 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;tags: [‘charles’,‘抓包’]&lt;br&gt;
 categories: ‘经验教程’&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;安装-charles&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装-charles&#34;&gt;#&lt;/a&gt; 安装 charles&lt;/h1&gt;
&lt;p&gt;官网下载：&lt;a href=&#34;https://www.charlesproxy.com/download/&#34;&gt;https://www.charlesproxy.com/download/&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;电脑抓包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#电脑抓包&#34;&gt;#&lt;/a&gt; 电脑抓包&lt;/h1&gt;
&lt;p&gt;安装好证书，打开 charles 这开启端口抓包，可设置 PC 系统代理来抓包数据，但通常不推荐这么做，推荐使用&lt;a href=&#34;https://microsoftedge.microsoft.com/addons/detail/fdbloeknjpnloaggplaobopplkdhnikc&#34;&gt; Proxy SwitchyOmega&lt;/a&gt; （Edge 插件 | chrome 也有此插件）来进行浏览器抓包。&lt;/p&gt;
&lt;h2 id=&#34;代理设置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代理设置&#34;&gt;#&lt;/a&gt; 代理设置&lt;/h2&gt;
&lt;p&gt;操作：Proxy -&amp;gt; Proxy Settings&lt;br&gt;
1. 勾选 Enable tranaparent HTTP proxying&lt;br&gt;
2. 勾选 Enable SOCKS proxy&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1702542982696-ff3a7b7a-cb54-45f2-9240-15a56ef773de.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;抓取端口设置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#抓取端口设置&#34;&gt;#&lt;/a&gt; 抓取端口设置&lt;/h2&gt;
&lt;p&gt;操作：Proxy -&amp;gt; &lt;a href=&#34;https://so.csdn.net/so/search?q=SSL&amp;amp;spm=1001.2101.3001.7020&#34;&gt;SSL&lt;/a&gt; Proxying Settings&lt;br&gt;
1. 勾选 Enable SSL Proxying&lt;br&gt;
2. 点击 Add，添加抓取端口&lt;/p&gt;
&lt;p&gt;__&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1702542919357-abd6010c-5334-4b49-9366-46eb366e5ad5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装证书&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装证书&#34;&gt;#&lt;/a&gt; 安装证书&lt;/h2&gt;
&lt;p&gt;操作：Help -&amp;gt; SSL Proxying -&amp;gt; Install Charles Root Certificate -&amp;gt; 安装证书 -&amp;gt; 本地计算机 -&amp;gt; 将所有的证书都放入下列存储 -&amp;gt; 点击浏览，选择” 受信任的根证书颁发机构” -&amp;gt; 完成&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/gif/26634545/1702542740132-c2b41f8f-4bd4-4534-9f3a-7bd6e3e3d394.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;移动抓包&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#移动抓包&#34;&gt;#&lt;/a&gt; 移动抓包&lt;/h1&gt;
&lt;p&gt;手机和 PC 处于同一网络下，将 charles&lt;strong&gt; 证书&lt;/strong&gt;安装至&lt;strong&gt;系统&lt;/strong&gt;（安卓 7 以下不用），配置&lt;strong&gt; WiFi 代理&lt;/strong&gt;或者&lt;strong&gt; clash 代理转发&lt;/strong&gt;，如此即可在 PC 上抓到手机流量包了。&lt;/p&gt;
&lt;h2 id=&#34;安装证书-2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装证书-2&#34;&gt;#&lt;/a&gt; 安装证书&lt;/h2&gt;
&lt;p&gt;准备安装 android 证书，按照下方步骤，显示图片弹窗后进行下一步。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Help&lt;/strong&gt;-&amp;gt; &lt;strong&gt;SSL Proxying&lt;/strong&gt; -&amp;gt;&lt;strong&gt;Install Charles Root Certificate On a Mobile Device&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1703312970820-c7e0626a-d8c1-4be9-8f91-036c35357056.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;手机浏览器输入地址 &lt;a href=&#34;http://chls.pro/ssl&#34;&gt;http://chls.pro/ssl&lt;/a&gt; 下载 crt 证书&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1702535270215-e71cd701-5988-4f3b-a89f-29b9bf53ed72.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;安装证书详细步骤：&lt;a href=&#34;/2023/12/20/yuque/android%E8%AF%81%E4%B9%A6%E5%AE%89%E8%A3%85%E4%B8%8E%E6%A0%A1%E9%AA%8C%E7%9B%B8%E5%85%B3%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95&#34;&gt;android 证书安装与校验相关解决办法&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;手动设置代理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#手动设置代理&#34;&gt;#&lt;/a&gt; 手动设置代理&lt;/h2&gt;
&lt;p&gt;代理主机：&lt;strong&gt;PC&lt;/strong&gt; 的 IP 地址，我这里是&lt;strong&gt; WiFi&lt;/strong&gt; 所以是&lt;strong&gt; WLAN&lt;/strong&gt; 的&lt;strong&gt; IPv4&lt;/strong&gt; 地址。&lt;/p&gt;
&lt;p&gt;代理端口：&lt;strong&gt;charles -&amp;gt; Proxy -&amp;gt; ProxySettings -&amp;gt; Proxies&lt;/strong&gt; 页面中的 &lt;strong&gt;HTTP Proxy -&amp;gt; Port&lt;/strong&gt; ，&lt;strong&gt;默认&lt;/strong&gt;为&lt;strong&gt; 8888&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1702535694493-ac598886-d284-4c1f-afe7-eb1f2442bc2f.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;clash-配置代理转发&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#clash-配置代理转发&#34;&gt;#&lt;/a&gt; clash 配置代理转发&lt;/h2&gt;
&lt;p&gt;打开 clash 依次点击 &lt;strong&gt;配置 -&amp;gt; 加号 -&amp;gt; 文件 -&amp;gt; 浏览文件 -&amp;gt; 配置文件&lt;/strong&gt;，选择 MT 管理器打开，将下面代码&lt;strong&gt;根据注释修改&lt;/strong&gt;后粘贴进去，保存好，启动服务即可。（下方有操作 gif）&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;mixed-port:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;7890&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;allow-lan:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;mode:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;global&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;log-level:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;info&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;external-controller:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;127.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.1&lt;/span&gt;&lt;span class=&#34;string&#34;&gt;:9090&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;proxies:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;proxy_http&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;type:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;http&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;server:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;192.168&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.199&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 代理主机&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;port:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8888&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# http代理端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;udp:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;proxy_socks5&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;type:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;socks5&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;server:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;192.168&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.0&lt;/span&gt;&lt;span class=&#34;number&#34;&gt;.199&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 代理主机&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;port:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;8889&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# socks代理端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;udp:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;proxy-groups:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;rules:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;配置名称随意，启动后记得选择代理模式哦！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/gif/26634545/1702537855126-591ef863-1e1b-4d96-853a-69762b62290b.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/26899.html</guid>
            <title>小破站老版本（入门级）SO层Native方法分析</title>
            <link>https://alanhays.github.io/posts/26899.html</link>
            <pubDate>Sat, 09 Dec 2023 01:25:03 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;tags: [‘SO’,‘Native’,‘入门级’,‘frida’]&lt;br&gt;
 categories: ‘逆向分析’&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;准备工作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#准备工作&#34;&gt;#&lt;/a&gt; 准备工作&lt;/h1&gt;
&lt;p&gt;APK：哔哩哔哩 6.13.0&lt;/p&gt;
&lt;p&gt;首先通过 charles 抓包（&lt;a href=&#34;/2023/12/14/yuque/charles%E7%A7%BB%E5%8A%A8&amp;amp;PC%E6%8A%93%E5%8C%85%E9%85%8D%E7%BD%AE/&#34;&gt;charles 抓包配置&lt;/a&gt;）发现加密参数是 sign（32 位）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1702545110875-4f85f617-f9b8-41f3-a026-5225f1ecb6fa.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用 ajdx 打开 apk 后搜索 &amp;quot;sign&amp;quot; 并没有想要的数据，接着试着搜索 &amp;quot;sign=&amp;quot; 经过分析发现是 &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(77, 77, 77);&amp;quot;&amp;gt;com.bilibili.nativelibrary.LibBili.s&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;生成。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1702546159027-aa401add-1412-4a36-85ec-25f0ed79ab6b.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;验证加密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#验证加密&#34;&gt;#&lt;/a&gt; 验证加密&lt;/h1&gt;
&lt;p&gt;使用 frida 来 hook 验证以下&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;hookSign&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;Java&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;perform&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;LibBili&lt;/span&gt; = &lt;span class=&#34;title class_&#34;&gt;Java&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;use&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;com.bilibili.nativelibrary.LibBili&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title class_&#34;&gt;LibBili&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;quot;s&amp;quot;&lt;/span&gt;].&lt;span class=&#34;property&#34;&gt;implementation&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;sortedMap&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;string&#34;&gt;`LibBili.s is called: sortedMap=&lt;span class=&#34;subst&#34;&gt;$&amp;#123;sortedMap.entrySet().toArray()&amp;#125;&lt;/span&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; result = &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;quot;s&amp;quot;&lt;/span&gt;](sortedMap);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`LibBili.s result=&lt;span class=&#34;subst&#34;&gt;$&amp;#123;result&amp;#125;&lt;/span&gt;`&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;setImmediate&lt;/span&gt;(hookSign);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;frida hook 日志，很明显 sign 就是在这里面生成的。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[MI 8 Pro::tv.danmaku.bili ]-&amp;gt; LibBili.s is called: sortedMap=access_key=null,appkey=1d8b6e7d45233436,build=6130400,c_locale=zh-Hans_CN,channel=xxl_wyyd_001,mVersion=71,mallVersion=6130400,mobi_app=android,platform=android,s_locale=zh-Hans_CN,statistics=&amp;#123;&amp;quot;appId&amp;quot;:1,&amp;quot;platform&amp;quot;:3,&amp;quot;version&amp;quot;:&amp;quot;6.13.0&amp;quot;,&amp;quot;abtest&amp;quot;:&amp;quot;&amp;quot;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;LibBili.s result=access_key=&amp;amp;appkey=1d8b6e7d45233436&amp;amp;build=6130400&amp;amp;c_locale=zh-Hans_CN&amp;amp;channel=xxl_wyyd_001&amp;amp;mVersion=71&amp;amp;mallVersion=6130400&amp;amp;mobi_app=android&amp;amp;platform=android&amp;amp;s_locale=zh-Hans_CN&amp;amp;statistics=%7B%22appId%22%3A1%2C%22platform%22%3A3%2C%22version%22%3A%226.13.0%22%2C%22abtest%22%3A%22%22%7D&amp;amp;ts=1702547190&amp;amp;sign=83c0620895711a111a4fc8f046b76d9d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;定位-so&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#定位-so&#34;&gt;#&lt;/a&gt; 定位 SO&lt;/h1&gt;
&lt;p&gt;使用大佬的&lt;a href=&#34;https://github.com/lasting-yang/frida_hook_libart/blob/master/hook_RegisterNatives.js&#34;&gt; hook 脚本&lt;/a&gt;并作了点修改&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;hook_RegisterNatives&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; symbols = &lt;span class=&#34;title class_&#34;&gt;Module&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;enumerateSymbolsSync&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;libart.so&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; addrRegisterNatives = &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; symbols.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; symbol = symbols[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//_ZN3art3JNI15RegisterNativesEP7_JNIEnvP7_jclassPK15JNINativeMethodi&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      symbol.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;indexOf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;art&amp;quot;&lt;/span&gt;) &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      symbol.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;indexOf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;JNI&amp;quot;&lt;/span&gt;) &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      symbol.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;indexOf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;RegisterNatives&amp;quot;&lt;/span&gt;) &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      symbol.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;indexOf&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;CheckJNI&amp;quot;&lt;/span&gt;) &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      addrRegisterNatives = symbol.&lt;span class=&#34;property&#34;&gt;address&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;RegisterNatives is at &amp;quot;&lt;/span&gt;, symbol.&lt;span class=&#34;property&#34;&gt;address&lt;/span&gt;, symbol.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (addrRegisterNatives != &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title class_&#34;&gt;Interceptor&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;attach&lt;/span&gt;(addrRegisterNatives, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;attr&#34;&gt;onEnter&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;args&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; env = args[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; java_class = args[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; class_name = &lt;span class=&#34;title class_&#34;&gt;Java&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;vm&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;tryGetEnv&lt;/span&gt;().&lt;span class=&#34;title function_&#34;&gt;getClassName&lt;/span&gt;(java_class);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// console.log(class_name);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 筛选类&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; taget_class = &lt;span class=&#34;string&#34;&gt;&amp;quot;com.bilibili.nativelibrary.LibBili&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (class_name === taget_class) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\n[RegisterNatives] method_count:&amp;quot;&lt;/span&gt;, args[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; methods_ptr = &lt;span class=&#34;title function_&#34;&gt;ptr&lt;/span&gt;(args[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; method_count = &lt;span class=&#34;built_in&#34;&gt;parseInt&lt;/span&gt;(args[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; method_count; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; name_ptr = &lt;span class=&#34;title class_&#34;&gt;Memory&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;readPointer&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  methods_ptr.&lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(i * &lt;span class=&#34;title class_&#34;&gt;Process&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;pointerSize&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; sig_ptr = &lt;span class=&#34;title class_&#34;&gt;Memory&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;readPointer&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  methods_ptr.&lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    i * &lt;span class=&#34;title class_&#34;&gt;Process&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;pointerSize&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; + &lt;span class=&#34;title class_&#34;&gt;Process&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;pointerSize&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; fnPtr_ptr = &lt;span class=&#34;title class_&#34;&gt;Memory&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;readPointer&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  methods_ptr.&lt;span class=&#34;title function_&#34;&gt;add&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    i * &lt;span class=&#34;title class_&#34;&gt;Process&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;pointerSize&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt; + &lt;span class=&#34;title class_&#34;&gt;Process&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;pointerSize&lt;/span&gt; * &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; name = &lt;span class=&#34;title class_&#34;&gt;Memory&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;readCString&lt;/span&gt;(name_ptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; sig = &lt;span class=&#34;title class_&#34;&gt;Memory&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;readCString&lt;/span&gt;(sig_ptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; find_module = &lt;span class=&#34;title class_&#34;&gt;Process&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;findModuleByAddress&lt;/span&gt;(fnPtr_ptr);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  &lt;span class=&#34;string&#34;&gt;&amp;quot;[RegisterNatives] java_class:&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  class_name,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  &lt;span class=&#34;string&#34;&gt;&amp;quot;name:&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  name,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  &lt;span class=&#34;string&#34;&gt;&amp;quot;sig:&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  sig,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  &lt;span class=&#34;string&#34;&gt;&amp;quot;fnPtr:&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  fnPtr_ptr,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  &lt;span class=&#34;string&#34;&gt;&amp;quot;module_name:&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  find_module.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  &lt;span class=&#34;string&#34;&gt;&amp;quot;module_base:&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  find_module.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  &lt;span class=&#34;string&#34;&gt;&amp;quot;offset:&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                  &lt;span class=&#34;title function_&#34;&gt;ptr&lt;/span&gt;(fnPtr_ptr).&lt;span class=&#34;title function_&#34;&gt;sub&lt;/span&gt;(find_module.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;setImmediate&lt;/span&gt;(hook_RegisterNatives);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;添加筛选条件后输出的结果不多&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Spawning `tv.danmaku.bili`...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RegisterNatives is at  0xf0b3cbd9 _ZN3art3JNIILb0EE15RegisterNativesEP7_JNIEnvP7_jclassPK15JNINativeMethodi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;RegisterNatives is at  0xf0b910d5 _ZN3art3JNIILb1EE15RegisterNativesEP7_JNIEnvP7_jclassPK15JNINativeMethodi&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Spawned `tv.danmaku.bili`. Resuming main thread!&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[MI 8 Pro::tv.danmaku.bili ]-&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[RegisterNatives] method_count: 0x7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[RegisterNatives] java_class: com.bilibili.nativelibrary.LibBili name: a sig: (Ljava/lang/String;)Ljava/lang/String; fnPtr: 0xb8369c35 module_name: libbili.so module_base: 0xb8368000 offset: 0x1c35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[RegisterNatives] java_class: com.bilibili.nativelibrary.LibBili name: ao sig: (Ljava/lang/String;II)Ljava/lang/String; fnPtr: 0xb8369c3b module_name: libbili.so module_base: 0xb8368000 offset: 0x1c3b&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[RegisterNatives] java_class: com.bilibili.nativelibrary.LibBili name: b sig: (Ljava/lang/String;)Ljavax/crypto/spec/IvParameterSpec; fnPtr: 0xb8369c49 module_name: libbili.so module_base: 0xb8368000 offset: 0x1c49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[RegisterNatives] java_class: com.bilibili.nativelibrary.LibBili name: s sig: (Ljava/util/SortedMap;)Lcom/bilibili/nativelibrary/SignedQuery; fnPtr: 0xb8369c4f module_name: libbili.so module_base: 0xb8368000 offset: 0x1c4f&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[RegisterNatives] java_class: com.bilibili.nativelibrary.LibBili name: so sig: (Ljava/util/SortedMap;II)Lcom/bilibili/nativelibrary/SignedQuery; fnPtr: 0xb8369c55 module_name: libbili.so module_base: 0xb8368000 offset: 0x1c55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[RegisterNatives] java_class: com.bilibili.nativelibrary.LibBili name: getCpuCount sig: ()I fnPtr: 0xb8369c63 module_name: libbili.so module_base: 0xb8368000 offset: 0x1c63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[RegisterNatives] java_class: com.bilibili.nativelibrary.LibBili name: getCpuId sig: ()I fnPtr: 0xb8369c67 module_name: libbili.so module_base: 0xb8368000 offset: 0x1c67&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这就是我们需要的结果，module_name: &lt;a href=&#34;http://libbili.so&#34;&gt;libbili.so&lt;/a&gt; 表示 s 函数在 &lt;strong&gt;&lt;a href=&#34;http://libbili.so&#34;&gt;libbili.so&lt;/a&gt;&lt;/strong&gt; 中。&lt;/p&gt;
&lt;p&gt;offset: 0x1c4f 偏移量为 0x1c4f 可以理解为函数起始地址。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[RegisterNatives] java_class: com.bilibili.nativelibrary.LibBili name: s sig: (Ljava/util/SortedMap;)Lcom/bilibili/nativelibrary/SignedQuery; fnPtr: 0xb8369c4f module_name: libbili.so module_base: 0xb8368000 offset: 0x1c4f&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h1 id=&#34;分析-so&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分析-so&#34;&gt;#&lt;/a&gt; 分析 SO&lt;/h1&gt;
&lt;p&gt;使用&lt;strong&gt; file&lt;/strong&gt; 命令查看 so 的位数是多少位，可以看到是 32 位的，那么使用 32 位的 ida 打开。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1702545860250-d8c98fed-5255-4a16-947a-c16016a59d92.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;偏移量地址定位函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#偏移量地址定位函数&#34;&gt;#&lt;/a&gt; 偏移量地址定位函数&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/gif/26634545/1702550208616-9e78b5a6-c72b-4f48-bd9f-75b6684b755b.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;jni_onload-定位-s-函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jni_onload-定位-s-函数&#34;&gt;#&lt;/a&gt; JNI_OnLoad 定位 s 函数&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/gif/26634545/1702550232510-9c4a4843-75f5-4fce-a183-770783c0dddb.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/59917.html</guid>
            <title>加速乐逆向</title>
            <link>https://alanhays.github.io/posts/59917.html</link>
            <pubDate>Wed, 08 Nov 2023 09:00:04 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;tags: [‘解混淆’,‘加速乐’]&lt;br&gt;
 categories: ‘逆向分析’&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;声明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#声明&#34;&gt;#&lt;/a&gt; 声明&lt;/h1&gt;
&lt;p&gt;本逆向文章仅为学术交流和学习探讨之用，不代表任何官方立场或观点。文章内容仅供参考，读者应自行判断其真实性和可靠性。因使用本逆向文章而产生的任何直接或间接后果，本网站及作者不承担任何法律责任。请在使用本逆向文章前仔细阅读相关法律法规和条款，并确保您理解并接受本免责声明的全部内容。如有侵权行为或不当使用，请及时联系我们，我们将尽快处理。&lt;/p&gt;
&lt;h1 id=&#34;逻辑分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#逻辑分析&#34;&gt;#&lt;/a&gt; 逻辑分析&lt;/h1&gt;
&lt;p&gt;1.index.html 请求中有如下图两个 cookies。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1699435260379-8d57aed7-a002-4c53-900a-8e901924ed55.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;2. 使用 charles 或其他抓包工具进行抓包，看到 index.html 进过三次加载，前两次是 521 状态。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1699435667713-255995fd-4aff-406e-ac33-4affeb7e17de.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;3. 第一次请求的  &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;  标签中进行了 cookie 设置，cookie 值如图是被混淆的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1699435810175-43c64164-fe6d-4413-8154-30811e494725.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;放到浏览器控制台中执行得到如下结果，发现 cookie 的 name 和成功响应带的 cookie 一致。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1699436504827-0fb474f3-f3eb-4741-8d17-d1b5599d2edb.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;4. 第二次请求带上来第一次请求的 cookies-__jsl_clearance_s, 返回结果应该经过 ob 混淆的代码。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1699436659042-6623654a-c89e-417c-b09b-a69ac47db90e.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;5. 第三次成功响应，对比 cookies 发现，__jsl_clearance_s 变了，大概率是 ob 混淆文件对它做了修改。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1699436842758-691796cb-f12c-49cf-b8da-52cc6d5694cc.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;请求实现&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#请求实现&#34;&gt;#&lt;/a&gt; 请求实现&lt;/h1&gt;
&lt;p&gt;解完混淆代码逻辑清晰可见&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1699457082391-e396b4e4-0e34-4777-92d8-863d062d2dcb.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;python-请求代码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#python-请求代码&#34;&gt;#&lt;/a&gt; python 请求代码&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1699463090349-47df0f08-cc99-4b35-8fd4-294c07c81c4f.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;完整代码仓库: &lt;a href=&#34;https://github.com/Alanhays/crawler/tree/main/SCDN_JSL&#34;&gt;https://github.com/Alanhays/crawler&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/50497.html</guid>
            <title>TLS指纹-JA4</title>
            <link>https://alanhays.github.io/posts/50497.html</link>
            <pubDate>Sat, 21 Oct 2023 01:31:26 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;tags: [‘JA4’,‘TLS/SSL’]&lt;br&gt;
 categories: ‘经验教程’&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;官方解释&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#官方解释&#34;&gt;#&lt;/a&gt; 官方解释&lt;/h2&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(31, 35, 40);&#34;&gt;JA4 + 是一套易于使用和共享的网络指纹识别方法。这些方法既是人类可读的，也是机器可读的，以促进更有效的威胁搜寻和分析。这些指纹的用例包括扫描威胁参与者、恶意软件检测、会话劫持预防、合规性自动化、位置跟踪、DDoS 检测、威胁参与者分组、反向外壳检测等等。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;JA4 系列 ：JA4/S/H/L/X/SSH，简称 JA4+&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.foxio.io/ja4-network-fingerprinting-9376fe9ca637&#34;&gt;官方介绍&lt;/a&gt; | &lt;a href=&#34;https://github.com/FoxIO-LLC/ja4&#34;&gt;JA4 指纹&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;初始指纹：&lt;br&gt;
JA4 — TLS 客户端 JA4S — TLS 服务器响应&lt;br&gt;
 JA4H — HTTP 客户端&lt;/p&gt;
&lt;p&gt;JA4L — 光距离 / 位置&lt;br&gt;
 JA4X — X509 TLS 证书&lt;br&gt;
 JA4SSH — SSH 流量&lt;br&gt;
更多指纹正在开发中，并将在发布时添加到 JA4+ 系列中。&lt;/p&gt;
&lt;p&gt;例子&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/webp/26634545/1697868649851-fc1d1b6c-4298-41cf-a8d5-28962645cc50.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#&#34;&gt;#&lt;/a&gt; &lt;/h1&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/1792.html</guid>
            <title>TLS指纹-JA3</title>
            <link>https://alanhays.github.io/posts/1792.html</link>
            <pubDate>Sat, 21 Oct 2023 00:38:54 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;tags: [‘TLS/SSL’,‘JA3’]&lt;br&gt;
 categories: ‘经验教程’&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;官方解释&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#官方解释&#34;&gt;#&lt;/a&gt; 官方解释&lt;/h2&gt;
&lt;p&gt;TLS 及其前身 SSL 用于为常见应用程序和恶意软件加密通信，以确保数据安全，因此可以隐藏在噪音中。要启动 TLS 会话，客户端将在 TCP 3 次握手之后发送 TLS 客户端 Hello 数据包。此数据包及其生成方式取决于构建客户端应用程序时使用的包和方法。服务器如果接受 TLS 连接，将使用基于服务器端库和配置以及 Client Hello 中的详细信息制定的 TLS Server Hello 数据包进行响应。由于 TLS 协商以明文形式传输，因此可以使用 TLS Client Hello 数据包中的详细信息来指纹和识别客户端应用程序。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://engineering.salesforce.com/open-sourcing-ja3-92c9e53c3c41/&#34;&gt;官方介绍&lt;/a&gt; | &lt;a href=&#34;https://github.com/FoxIO-LLC/ja3&#34;&gt;JA3 指纹&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;ja3-原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ja3-原理&#34;&gt;#&lt;/a&gt; JA3 原理&lt;/h2&gt;
&lt;p&gt;JA3 收集以下字段的字节的十进制值；SSL 版本、接受的密码、扩展列表、椭圆曲线和椭圆曲线格式。然后，它按顺序将这些值连接在一起，使用 “，” 分隔每个字段，使用 “-” 分隔每个字段中的每个值。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/webp/26634545/1697851217544-efd479ce-e2f9-4582-8895-e2efe95fe3f5.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;字段顺序如下：&lt;br&gt;
SSLVersion，密码，扩展，椭圆曲线，椭圆曲线点格式&lt;/p&gt;
&lt;p&gt;例：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;769,47–53–5–10–49161–49162–49171–49172–50–56–19–4,0–10–11,23–24–25,0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果客户端 Hello 中没有 SSL 扩展，则字段留空。&lt;/p&gt;
&lt;p&gt;例：&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;769,4–5–10–9–100–98–3–6–19–18–99,,,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后对这些字符串进行 MD5 哈希处理，以生成易于使用和共享的 32 个字符的指纹。这是 JA3 SSL 客户端指纹。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;769,47–53–5–10–49161–49162–49171–49172–50–56–19–4,0–10–11,23–24–25,0 → ada70206e40642a3e4461f35503241d5769,4–5–10–9–100–98–3–6–19–18–99,,,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;→ de350869b8c85de67a350c8d186f11e6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们还需要引入一些代码来解释 Google 的 GREASE（生成随机扩展和维持可扩展性），&lt;a href=&#34;https://tools.ietf.org/html/draft-davidben-tls-grease-01&#34;&gt;如此处&lt;/a&gt;所述。Google 将此用作防止 TLS 生态系统中扩展性失败的机制。JA3 完全忽略这些值，以确保使用 GREASE 的程序仍可以使用单个 JA3 哈希进行标识。&lt;/p&gt;
&lt;h2 id=&#34;tls-检测判断&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tls-检测判断&#34;&gt;#&lt;/a&gt; TLS 检测判断&lt;/h2&gt;
&lt;h3 id=&#34;tls-检测原理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tls-检测原理&#34;&gt;#&lt;/a&gt; TLS 检测原理&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;抓包工具 wireshark、charles 只能查看 TLS 指纹，不能以此判断服务器检测了 TLS。&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 HTTPS 协议中，TLS 协议是用来在客户端和服务器之间建立安全连接的，这个连接过程中就会生成 TLS 指纹。只要是 HTTPS 协议，必定会生成 TLS 指纹。&lt;/p&gt;
&lt;p&gt;检测 TLS 是在服务端进行的，&lt;strong&gt;唯一&lt;/strong&gt;判断是否检测 TLS 的手段就是&lt;strong&gt;测试&lt;/strong&gt;和&lt;strong&gt;猜测&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;未检测-tls&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#未检测-tls&#34;&gt;#&lt;/a&gt; 未检测 TLS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(79, 79, 79);&#34;&gt;验证请求头顺序&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(79, 79, 79);&#34;&gt;检测 HTTP2.0&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(79, 79, 79);&#34;&gt;curl 生成 code 可直接访问&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(79, 79, 79);&#34;&gt;…&lt;/font&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;检测了-tls&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#检测了-tls&#34;&gt;#&lt;/a&gt; 检测了 TLS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;curl、api 调试工具、js 有可响应的就 python 不行。&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;curl、js 都不行就浏览器可以。&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;…&lt;/font&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;过校验示例&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过校验示例&#34;&gt;#&lt;/a&gt; 过校验示例&lt;/h2&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;python 的 aiohttp | requests | httpx | scrapy 和 golang 相关的 ja3 指纹修改案例。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1697867423544-d0cb481b-b803-4d8f-bc21-fec7ac4f18fd.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;笔者整理的一些案例：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://pan.baidu.com/s/1MEMMZTNg-6qmPrzprHVSVQ?pwd=k999&#34;&gt;JA3 指纹（go/python）点击下载&lt;/a&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/6066.html</guid>
            <title>400行代码解混淆猿人学第二届第三题然后进行完美反编译</title>
            <link>https://alanhays.github.io/posts/6066.html</link>
            <pubDate>Mon, 16 Oct 2023 02:43:09 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;tags: [‘AST’,‘解混淆’]&lt;br&gt;
 categories: ‘逆向分析’&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;sticky: ‘8’&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;题目&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题目&#34;&gt;#&lt;/a&gt; 题目&lt;/h2&gt;
&lt;p&gt;猿人学 2023 届第三题 &lt;a href=&#34;https://match2023.yuanrenxue.cn/topic/3&#34;&gt;点击跳转&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;0x01-降维打击&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x01-降维打击&#34;&gt;#&lt;/a&gt; 0x01 降维打击&lt;/h2&gt;
&lt;p&gt;这里 if 都是多层嵌套的，非常影响阅读体验，直接一步将它变为一维结构吧！&lt;/p&gt;
&lt;p&gt;还原前先手动还原小部分代码，接着写反混淆脚本批量修改。&lt;/p&gt;
&lt;p&gt;我们单看  &lt;code&gt;if (o &amp;lt; 2)&lt;/code&gt;  这个 if 块，很明显 &lt;code&gt;o &amp;lt; 1&lt;/code&gt;  其实就是 &lt;code&gt;o==0&lt;/code&gt;  而 else 就是  &lt;code&gt;o==1&lt;/code&gt; , 以此类推。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;e&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; o = e || &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (;;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (o &amp;lt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (o &amp;lt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        o += &lt;span class=&#34;number&#34;&gt;88&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v.&lt;span class=&#34;property&#34;&gt;v&lt;/span&gt; = !&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        o += &lt;span class=&#34;number&#34;&gt;226&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (o &amp;lt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        o += &lt;span class=&#34;number&#34;&gt;243&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        L = Y || l.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        o += &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 手动还原一下 还原如下&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;e&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; o = e || &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt; (o) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      o += &lt;span class=&#34;number&#34;&gt;88&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      v.&lt;span class=&#34;property&#34;&gt;v&lt;/span&gt; = !&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      o += &lt;span class=&#34;number&#34;&gt;226&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      o += &lt;span class=&#34;number&#34;&gt;243&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      L = Y || l.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      o += &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这是我写的插件，将&lt;strong&gt;多层嵌套的 if&lt;/strong&gt; 转换为&lt;strong&gt; Switch&lt;/strong&gt; 语法，可以方便我们后续调试。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;IfToCase&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;IfStatement&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;path, state&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &amp;#123; test, consequent, alternate &amp;#125; = path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &amp;#123; name, cases &amp;#125; = state;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 如果 test 不是 o &amp;lt; 数字，则不进行处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!types.&lt;span class=&#34;title function_&#34;&gt;isBinaryExpression&lt;/span&gt;(test, &amp;#123; &lt;span class=&#34;attr&#34;&gt;operator&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;&amp;quot;&lt;/span&gt; &amp;#125;)) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!types.&lt;span class=&#34;title function_&#34;&gt;isIdentifier&lt;/span&gt;(test.&lt;span class=&#34;property&#34;&gt;left&lt;/span&gt;, &amp;#123; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;: name &amp;#125;)) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!types.&lt;span class=&#34;title function_&#34;&gt;isNumericLiteral&lt;/span&gt;(test.&lt;span class=&#34;property&#34;&gt;right&lt;/span&gt;)) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// alternate.body.push(types.BreakStatement());&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// consequent.body.push(types.BreakStatement());&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; right = test.&lt;span class=&#34;property&#34;&gt;right&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;value&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (right % &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; === &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 处理 else 不是 if 节点的情况&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (types.&lt;span class=&#34;title function_&#34;&gt;isIfStatement&lt;/span&gt;(alternate.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;])) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cases.&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(types.&lt;span class=&#34;title class_&#34;&gt;SwitchCase&lt;/span&gt;(types.&lt;span class=&#34;title function_&#34;&gt;valueToNode&lt;/span&gt;(right), alternate.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 构建 case 节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; case1 = types.&lt;span class=&#34;title class_&#34;&gt;SwitchCase&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        types.&lt;span class=&#34;title function_&#34;&gt;valueToNode&lt;/span&gt;(right - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        consequent.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; case2 = types.&lt;span class=&#34;title class_&#34;&gt;SwitchCase&lt;/span&gt;(types.&lt;span class=&#34;title function_&#34;&gt;valueToNode&lt;/span&gt;(right), alternate.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      cases.&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(case1, case2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;IfToSwitch&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;ForStatement&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &amp;#123; init, test, update, body &amp;#125; = path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; prev = path.&lt;span class=&#34;title function_&#34;&gt;getPrevSibling&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!types.&lt;span class=&#34;title function_&#34;&gt;isIfStatement&lt;/span&gt;(body)) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; discriminant = prev.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;declarations&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;].&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; cases = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;IfToCase&lt;/span&gt;, &amp;#123; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;: discriminant.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;cases&lt;/span&gt;: cases &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!cases.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; switchNode = types.&lt;span class=&#34;title class_&#34;&gt;SwitchStatement&lt;/span&gt;(discriminant, cases);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;body&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;replaceInline&lt;/span&gt;(switchNode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对比效果图如下，处理后清晰了不少。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1697529594404-f77481eb-28cb-4bd3-a926-b635f89cec30.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;0x02-打回原形&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x02-打回原形&#34;&gt;#&lt;/a&gt; 0x02 打回原形&lt;/h2&gt;
&lt;p&gt;经过上一步还原后发现有很多  &lt;code&gt;o += xx | o -= xx&lt;/code&gt;  的代码，这里的 o 其实就是 case 的条件，那么简化一下吧！ &lt;code&gt;o = o - xxx&lt;/code&gt;  其中  &lt;code&gt;o - xxx &lt;/code&gt; 部分我们计算出来。&lt;/p&gt;
&lt;p&gt;下面插件来喽！又香又脆，嘎嘎香！&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;RestoreJump&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;AssignmentExpression&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &amp;#123; operator, left, right &amp;#125; = path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!(operator[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] === &lt;span class=&#34;string&#34;&gt;&amp;quot;=&amp;quot;&lt;/span&gt; &amp;amp;&amp;amp; types.&lt;span class=&#34;title function_&#34;&gt;isNumericLiteral&lt;/span&gt;(right))) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; caseNode = path.&lt;span class=&#34;title function_&#34;&gt;findParent&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;p&lt;/span&gt;) =&amp;gt;&lt;/span&gt; p.&lt;span class=&#34;title function_&#34;&gt;isSwitchCase&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &amp;#123; consequent, test &amp;#125; = caseNode.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 构建 ast 节点  o -= xxx  改为 o - xxx ,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; _node = types.&lt;span class=&#34;title function_&#34;&gt;assignmentExpression&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;string&#34;&gt;&amp;quot;=&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      left,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      types.&lt;span class=&#34;title function_&#34;&gt;valueToNode&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        operator[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] === &lt;span class=&#34;string&#34;&gt;&amp;quot;-&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          ? test.&lt;span class=&#34;property&#34;&gt;value&lt;/span&gt; - right.&lt;span class=&#34;property&#34;&gt;value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          : test.&lt;span class=&#34;property&#34;&gt;value&lt;/span&gt; + right.&lt;span class=&#34;property&#34;&gt;value&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;title function_&#34;&gt;replaceInline&lt;/span&gt;(_node);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对比效果图如下，处理后清晰了不少。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1697529672556-f653bcaa-08df-4fb3-b4ab-8d5a3c43d8cc.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;0x03-迷阵寻踪&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x03-迷阵寻踪&#34;&gt;#&lt;/a&gt; 0x03 迷阵寻踪&lt;/h2&gt;
&lt;p&gt;经过上面还原后 发现很多 case 块只做 o 的修改，那我就知道它下一步要到那个 case 块，唉！我们是不是可以将他们合并起来，插件如下&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;getJump&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;node, name&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!types.&lt;span class=&#34;title function_&#34;&gt;isExpressionStatement&lt;/span&gt;(node)) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &amp;#123; expression &amp;#125; = node;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!types.&lt;span class=&#34;title function_&#34;&gt;isAssignmentExpression&lt;/span&gt;(expression)) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (expression.&lt;span class=&#34;property&#34;&gt;left&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt; !== name) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; expression.&lt;span class=&#34;property&#34;&gt;right&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;value&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;getCaseJump&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;map, name, node&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &amp;#123; test, consequent &amp;#125; = node;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; list = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; con = consequent[consequent.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; num = &lt;span class=&#34;title function_&#34;&gt;getJump&lt;/span&gt;(con, name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (num !== &lt;span class=&#34;literal&#34;&gt;undefined&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    list.&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(num);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (types.&lt;span class=&#34;title function_&#34;&gt;isIfStatement&lt;/span&gt;(con)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &amp;#123; consequent, alternate &amp;#125; = con;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; num = &lt;span class=&#34;title function_&#34;&gt;getJump&lt;/span&gt;(consequent, name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (num !== &lt;span class=&#34;literal&#34;&gt;undefined&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      list.&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(num);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    num = &lt;span class=&#34;title function_&#34;&gt;getJump&lt;/span&gt;(alternate, name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (num !== &lt;span class=&#34;literal&#34;&gt;undefined&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      list.&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(num);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  map[test.&lt;span class=&#34;property&#34;&gt;value&lt;/span&gt;] = list;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;removeDuplicates&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;arr1, arr2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; result = []; &lt;span class=&#34;comment&#34;&gt;// 存储删除的元素的数组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; arr1.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; found = &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; j = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; j &amp;lt; arr2.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (arr1[i] === arr2[j]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        result.&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(arr1[i]); &lt;span class=&#34;comment&#34;&gt;// 将相同的元素存储到结果数组中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        arr2.&lt;span class=&#34;title function_&#34;&gt;splice&lt;/span&gt;(j, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 删除arr2中的相同元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        found = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (found) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      arr1.&lt;span class=&#34;title function_&#34;&gt;splice&lt;/span&gt;(i, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 删除arr1中的相同元素&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      i--; &lt;span class=&#34;comment&#34;&gt;// 由于删除了元素，需要调整索引&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;controlFlowStructure&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;si, map, cases, stack = [], body = []&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!map.&lt;span class=&#34;property&#34;&gt;loop&lt;/span&gt;) map.&lt;span class=&#34;property&#34;&gt;loop&lt;/span&gt; = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (stack.&lt;span class=&#34;title function_&#34;&gt;includes&lt;/span&gt;(si)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (map.&lt;span class=&#34;property&#34;&gt;loop&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;indexOf&lt;/span&gt;(si) === -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;) map.&lt;span class=&#34;property&#34;&gt;loop&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(si);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; body;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; item = map[si];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  body = body.&lt;span class=&#34;title function_&#34;&gt;concat&lt;/span&gt;(cases[si].&lt;span class=&#34;property&#34;&gt;consequent&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt; (item.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; body;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;controlFlowStructure&lt;/span&gt;(item[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], map, cases, stack, body);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      stack.&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(si);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      body[body.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].&lt;span class=&#34;property&#34;&gt;consequent&lt;/span&gt; = types.&lt;span class=&#34;title function_&#34;&gt;blockStatement&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_&#34;&gt;controlFlowStructure&lt;/span&gt;(item[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], map, cases, stack, [])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (map.&lt;span class=&#34;property&#34;&gt;loop&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;includes&lt;/span&gt;(si)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &amp;#123; test, consequent &amp;#125; = body[body.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        body[body.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] = types.&lt;span class=&#34;title function_&#34;&gt;whileStatement&lt;/span&gt;(test, consequent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        body = body.&lt;span class=&#34;title function_&#34;&gt;concat&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;title function_&#34;&gt;controlFlowStructure&lt;/span&gt;(item[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;], map, cases, stack, [])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        body[body.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].&lt;span class=&#34;property&#34;&gt;alternate&lt;/span&gt; = types.&lt;span class=&#34;title function_&#34;&gt;blockStatement&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;title function_&#34;&gt;controlFlowStructure&lt;/span&gt;(item[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;], map, cases, stack, [])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        body = body.&lt;span class=&#34;title function_&#34;&gt;concat&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;title function_&#34;&gt;removeDuplicates&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            body[body.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].&lt;span class=&#34;property&#34;&gt;consequent&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            body[body.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].&lt;span class=&#34;property&#34;&gt;alternate&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          )&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      stack.&lt;span class=&#34;title function_&#34;&gt;pop&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; body;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MergeCases&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;SwitchStatement&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &amp;#123; discriminant, cases &amp;#125; = path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; name = discriminant.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; binding = path.&lt;span class=&#34;property&#34;&gt;scope&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;getBinding&lt;/span&gt;(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; start = binding.&lt;span class=&#34;property&#34;&gt;path&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;init&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;right&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;value&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; map = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; cases.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;title function_&#34;&gt;getCaseJump&lt;/span&gt;(map, name, cases[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;title function_&#34;&gt;replaceInline&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;controlFlowStructure&lt;/span&gt;(start, map, cases));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对比图如下，都有实质的代码了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1702450260705-b76c8b0a-fafb-4898-b521-5585ee9afd08.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;控制流程图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2024/png/26634545/1725519145234-4f175d37-6978-46af-b9a3-4a06159183e9.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;0x04-移除污秽&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x04-移除污秽&#34;&gt;#&lt;/a&gt; 0x04 移除污秽&lt;/h2&gt;
&lt;p&gt;将指针修改的代码去除&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;CleaningUpGarbage&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;ForStatement&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; p = path.&lt;span class=&#34;title function_&#34;&gt;getPrevSibling&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; name = p.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;declarations&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;].&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;property&#34;&gt;scope&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(path.&lt;span class=&#34;property&#34;&gt;scope&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;block&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;title class_&#34;&gt;AssignmentExpression&lt;/span&gt;(_path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!types.&lt;span class=&#34;title function_&#34;&gt;isIdentifier&lt;/span&gt;(_path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;left&lt;/span&gt;, &amp;#123; &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;: name &amp;#125;)) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        _path.&lt;span class=&#34;title function_&#34;&gt;remove&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;移除无关代码&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1702450286996-5f3bb3ba-428f-44a6-b967-0193166a5738.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;0x05-结构优化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x05-结构优化&#34;&gt;#&lt;/a&gt; 0x05 结构优化&lt;/h2&gt;
&lt;p&gt;优化 ifelse 结构，使其更便于阅读。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;isEndNode&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;nodes&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; typeList = [&lt;span class=&#34;string&#34;&gt;&amp;quot;ReturnStatement&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;ThrowStatement&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; nodes.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (typeList.&lt;span class=&#34;title function_&#34;&gt;includes&lt;/span&gt;(nodes[i].&lt;span class=&#34;property&#34;&gt;type&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; ifOptimization = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;IfStatement&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &amp;#123; test, consequent, alternate &amp;#125; = path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!alternate) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;title function_&#34;&gt;isEndNode&lt;/span&gt;(consequent.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      path.&lt;span class=&#34;title function_&#34;&gt;insertAfter&lt;/span&gt;(alternate.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;alternate&lt;/span&gt; = &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;title function_&#34;&gt;isEndNode&lt;/span&gt;(alternate.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      path.&lt;span class=&#34;title function_&#34;&gt;insertAfter&lt;/span&gt;(consequent.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      path.&lt;span class=&#34;title function_&#34;&gt;replaceInline&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        types.&lt;span class=&#34;title function_&#34;&gt;ifStatement&lt;/span&gt;(types.&lt;span class=&#34;title function_&#34;&gt;unaryExpression&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;!&amp;quot;&lt;/span&gt;, test), alternate, &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      types.&lt;span class=&#34;title function_&#34;&gt;isIfStatement&lt;/span&gt;(consequent.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;[consequent.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]) &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;title function_&#34;&gt;isEndNode&lt;/span&gt;(consequent.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;[consequent.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].&lt;span class=&#34;property&#34;&gt;consequent&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_&#34;&gt;generator&lt;/span&gt;(alternate.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]).&lt;span class=&#34;property&#34;&gt;code&lt;/span&gt; ===&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_&#34;&gt;generator&lt;/span&gt;(consequent.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;[consequent.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].&lt;span class=&#34;property&#34;&gt;alternate&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          .&lt;span class=&#34;property&#34;&gt;code&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        path.&lt;span class=&#34;title function_&#34;&gt;insertAfter&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          consequent.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;[consequent.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].&lt;span class=&#34;property&#34;&gt;alternate&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        consequent.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;[consequent.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;].&lt;span class=&#34;property&#34;&gt;alternate&lt;/span&gt; = &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;alternate&lt;/span&gt; = &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;处理后逻辑尽现。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1702450320593-e2b95e6e-9e76-4844-b667-6eec93d04bd7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;0x06-答辩还原&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x06-答辩还原&#34;&gt;#&lt;/a&gt; 0x06 答辩还原&lt;/h2&gt;
&lt;p&gt;这里其实就是嵌套的三元表达式，先手动还原几条能发现他本质是 switch&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;TernaryToSwitch&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;ConditionalExpression&lt;/span&gt;(path, &amp;#123; cases, _name &amp;#125;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &amp;#123; test, consequent, alternate &amp;#125; = path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!types.&lt;span class=&#34;title function_&#34;&gt;isBinaryExpression&lt;/span&gt;(test, &amp;#123; &lt;span class=&#34;attr&#34;&gt;operator&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;==&amp;quot;&lt;/span&gt; &amp;#125;)) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &amp;#123; right, left &amp;#125; = test;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!types.&lt;span class=&#34;title function_&#34;&gt;isIdentifier&lt;/span&gt;(right) || !types.&lt;span class=&#34;title function_&#34;&gt;isNumericLiteral&lt;/span&gt;(left)) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!cases[right.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      cases[right.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;] = [];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; body = [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      types.&lt;span class=&#34;title function_&#34;&gt;expressionStatement&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        types.&lt;span class=&#34;title function_&#34;&gt;assignmentExpression&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;=&amp;quot;&lt;/span&gt;, types.&lt;span class=&#34;title function_&#34;&gt;identifier&lt;/span&gt;(_name), consequent)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    body.&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(types.&lt;span class=&#34;title function_&#34;&gt;breakStatement&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cases[right.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;].&lt;span class=&#34;title function_&#34;&gt;push&lt;/span&gt;(types.&lt;span class=&#34;title function_&#34;&gt;switchCase&lt;/span&gt;(test.&lt;span class=&#34;property&#34;&gt;left&lt;/span&gt;, body));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;TernaryReturn&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;ReturnStatement&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &amp;#123; argument &amp;#125; = path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!types.&lt;span class=&#34;title function_&#34;&gt;isConditionalExpression&lt;/span&gt;(argument)) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!types.&lt;span class=&#34;title function_&#34;&gt;isBinaryExpression&lt;/span&gt;(argument.&lt;span class=&#34;property&#34;&gt;test&lt;/span&gt;, &amp;#123; &lt;span class=&#34;attr&#34;&gt;operator&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;==&amp;quot;&lt;/span&gt; &amp;#125;)) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; cases = &amp;#123;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; name = argument.&lt;span class=&#34;property&#34;&gt;test&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;right&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!name) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; _name = &lt;span class=&#34;string&#34;&gt;`&lt;span class=&#34;subst&#34;&gt;$&amp;#123;name&amp;#125;&lt;/span&gt;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;path.node.start&amp;#125;&lt;/span&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;TernaryToSwitch&lt;/span&gt;, &amp;#123; &lt;span class=&#34;attr&#34;&gt;cases&lt;/span&gt;: cases, &lt;span class=&#34;attr&#34;&gt;_name&lt;/span&gt;: _name &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;title function_&#34;&gt;insertBefore&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      types.&lt;span class=&#34;title function_&#34;&gt;variableDeclaration&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;var&amp;quot;&lt;/span&gt;, [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        types.&lt;span class=&#34;title function_&#34;&gt;variableDeclarator&lt;/span&gt;(types.&lt;span class=&#34;title function_&#34;&gt;identifier&lt;/span&gt;(_name), &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;title function_&#34;&gt;replaceInline&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      types.&lt;span class=&#34;title function_&#34;&gt;switchStatement&lt;/span&gt;(types.&lt;span class=&#34;title function_&#34;&gt;identifier&lt;/span&gt;(name), cases[name])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;title function_&#34;&gt;insertAfter&lt;/span&gt;(types.&lt;span class=&#34;title function_&#34;&gt;returnStatement&lt;/span&gt;(types.&lt;span class=&#34;title function_&#34;&gt;identifier&lt;/span&gt;(_name)));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对比效果图如下，处理后犹如拨云见日，茅塞顿开。（还原它主要是为了反编译 jsvmp）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1702450426324-2d914a7e-900f-43bc-bf20-8a9354955a72.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;0x07-窥探本源&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0x07-窥探本源&#34;&gt;#&lt;/a&gt; 0x07 窥探本源&lt;/h2&gt;
&lt;p&gt;反编译后魔改点与环境检测清晰可见&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1702451095343-fda949dc-020d-4397-9c0e-9d372de2e24b.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1702451229487-9bdf0c20-397c-428f-8fe4-0bc1250ebc6b.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1702451251011-f97b6dac-f961-4a76-bf51-5d4661a47d64.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1702451267059-47cac11c-8d64-43fe-859a-8aee47d83335.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/60496.html</guid>
            <title>GitHub Actions 的使用</title>
            <link>https://alanhays.github.io/posts/60496.html</link>
            <pubDate>Wed, 11 Oct 2023 01:23:47 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;tags: [‘GitHub’,‘Actions’]&lt;br&gt;
 categories: ‘精选推荐’&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;基本概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基本概念&#34;&gt;#&lt;/a&gt; 基本概念&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;workflow （工作流程）：持续集成一次运行的过程，就是一个 workflow。&lt;/li&gt;
&lt;li&gt;job （任务）：一个 workflow 由一个或多个 jobs 构成，含义是一次持续集成的运行，可以完成多个任务。&lt;/li&gt;
&lt;li&gt;step（步骤）：每个 job 由多个 step 构成，一步步完成。&lt;/li&gt;
&lt;li&gt;action （动作）：每个 step 可以依次执行一个或多个命令（action）。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;workflow-文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#workflow-文件&#34;&gt;#&lt;/a&gt; workflow 文件&lt;/h2&gt;
&lt;p&gt;GitHub Actions 的配置文件叫做 workflow 文件，存放在代码仓库的&lt;font style=&#34;color:#A58F04;&#34;&gt;.github/workflows&lt;/font&gt;目录。&lt;/p&gt;
&lt;p&gt;workflow 文件采用 YAML 格式，文件名可以任意取，但是后缀名统一为&lt;font style=&#34;color:#A58F04;&#34;&gt;.yml&lt;/font&gt;，比如&lt;font style=&#34;color:#A58F04;&#34;&gt;foo.yml&lt;/font&gt;。&lt;/p&gt;
&lt;p&gt;一个库可以有多个 workflow 文件。&lt;/p&gt;
&lt;p&gt;GitHub 只要发现&lt;font style=&#34;color:#A58F04;&#34;&gt;.github/workflows&lt;/font&gt;目录里面有&lt;font style=&#34;color:#A58F04;&#34;&gt;.yml&lt;/font&gt;文件，就会自动运行该文件。&lt;/p&gt;
&lt;p&gt;workflow 文件的配置字段非常多，详见&lt;a href=&#34;https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions&#34;&gt;官方文档&lt;/a&gt;。下面是一些基本字段。&lt;/p&gt;
&lt;h3 id=&#34;name&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#name&#34;&gt;#&lt;/a&gt; name&lt;/h3&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(31, 35, 40);&#34;&gt;工作流的名称。GitHub 在存储库的 “Actions” 显示工作流的名称。如果省略 ，GitHub 将显示相对于存储库根目录的工作流文件路径。&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;name: GitHub Actions Demo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;on&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#on&#34;&gt;#&lt;/a&gt; on&lt;/h3&gt;
&lt;p&gt;定义运行工作流时的触发事件&lt;/p&gt;
&lt;h4 id=&#34;使用单个事件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用单个事件&#34;&gt;#&lt;/a&gt; 使用单个事件&lt;/h4&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(31, 35, 40);&#34;&gt;例如，具有以下值的工作流将在推送到工作流存储库中的任何分支时运行：&lt;/font&gt;&lt;font style=&#34;color:rgb(31, 35, 40);&#34;&gt;on&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;on:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;push&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;使用多个事件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用多个事件&#34;&gt;#&lt;/a&gt; 使用多个事件&lt;/h4&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(31, 35, 40);&#34;&gt;您可以指定单个事件或多个事件。例如，当推送到存储库中的任何分支或有人分叉存储库时，将运行具有以下值的工作流：&lt;/font&gt;&lt;font style=&#34;color:rgb(31, 35, 40);&#34;&gt;on&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;on:&lt;/span&gt; [&lt;span class=&#34;string&#34;&gt;push&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;fork&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(31, 35, 40);&#34;&gt;如果指定多个事件，则只需发生其中一个事件即可触发工作流。如果同时发生工作流的多个触发事件，则将触发多个工作流运行。&lt;/font&gt;&lt;/p&gt;
&lt;h3 id=&#34;jobsjob_idname&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jobsjob_idname&#34;&gt;#&lt;/a&gt; jobs.&amp;lt;job_id&amp;gt;.name&lt;/h3&gt;
&lt;p&gt;工作流运行中要执行的一项或多项任务&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;jobs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;task1:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;The&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;first&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;task&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;be&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;executed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;task2:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;The&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;second&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;task&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;to&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;execute&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面代码的 jobs 字段包含 task1、task2 任务，task1 (job_id) 里面的 name 字段是任务的说明。&lt;/p&gt;
&lt;h3 id=&#34;jobsjob_idneeds&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jobsjob_idneeds&#34;&gt;#&lt;/a&gt; jobs.&amp;lt;job_id&amp;gt;.needs&lt;/h3&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(31, 35, 40);&#34;&gt;用于标识在运行当前任务之前&lt;/font&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(31, 35, 40);&#34;&gt;必须成功完成&lt;/font&gt;&lt;/strong&gt;&lt;font style=&#34;color:rgb(31, 35, 40);&#34;&gt;的一项或多项作业&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;jobs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;job1:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;job2:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;needs:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;job1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;job3:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;needs:&lt;/span&gt; [&lt;span class=&#34;string&#34;&gt;job1&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;job2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(31, 35, 40);&#34;&gt;job1 无需等待直接执行、job2 需要等待 job1 执行完成、job3 需要等待 job1、job2 都执行完成。&lt;/font&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(31, 35, 40);&#34;&gt;示例执行流程 | job1 -&amp;gt; job2 -&amp;gt; job3&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;jobsjob_idruns-on&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jobsjob_idruns-on&#34;&gt;#&lt;/a&gt; jobs.&amp;lt;job_id&amp;gt;.runs-on&lt;/h3&gt;
&lt;p&gt;runs-on 字段指定运行所需要的虚拟机环境。可用虚拟机如下（示例）&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ubuntu&lt;/th&gt;
&lt;th&gt;windows&lt;/th&gt;
&lt;th&gt;macos&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ubuntu-latest&lt;/td&gt;
&lt;td&gt;windows-latest&lt;/td&gt;
&lt;td&gt;macos-latest&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ubuntu-18.04&lt;/td&gt;
&lt;td&gt;windows-2019&lt;/td&gt;
&lt;td&gt;macos-10.14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ubuntu-22.04&lt;/td&gt;
&lt;td&gt;windows-2022&lt;/td&gt;
&lt;td&gt;macos-12&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;指定虚拟机为 ubuntu-22.04 （必填）&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;runs-on:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;ubuntu-22.04&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;jobsjob_idsteps&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jobsjob_idsteps&#34;&gt;#&lt;/a&gt; jobs.&amp;lt;job_id&amp;gt;.steps&lt;/h3&gt;
&lt;p&gt;steps 字段指定每个 Job 的运行步骤，可以包含一个或多个步骤。&lt;/p&gt;
&lt;p&gt;每个步骤都可以指定以下三个字段。&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;jobs.&amp;lt;job_id&amp;gt;.steps.name：名称&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;jobs.&amp;lt;job_id&amp;gt;.steps.run：运行的命令或者&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;action&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;jobs.&amp;lt;job_id&amp;gt;.steps.env：所需的环境变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/31158.html</guid>
            <title>语雀编写文章一键自动部署博客至Github和Gitee</title>
            <link>https://alanhays.github.io/posts/31158.html</link>
            <pubDate>Mon, 09 Oct 2023 01:26:58 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;tags: [‘hexo’,‘GitHub’]&lt;br&gt;
 categories: ‘精选推荐’&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;description: 一键发布语雀文章至 github (hexo 博客) 和 gitee 并实现 gitee pages 自动更新。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;一键发布语雀文章至 github (hexo 博客) 和 gitee 并实现 gitee pages 自动更新。&lt;/p&gt;
&lt;p&gt;hexo 博客示例：&lt;a href=&#34;https://alanhays.gitee.io/&#34;&gt;https://alanhays.gitee.io&lt;/a&gt; | &lt;a href=&#34;https://alanhays.github.io/&#34;&gt;https://alanhays.github.io&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;语雀编写文章&lt;/li&gt;
&lt;li&gt;同步语雀文章至 hexo&lt;/li&gt;
&lt;li&gt;hexo 发布语雀文章更新博客&lt;/li&gt;
&lt;li&gt;github actions 自动同步仓库至 gitee 并更新 pages&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;部署-hexo-博客&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#部署-hexo-博客&#34;&gt;#&lt;/a&gt; 部署 hexo 博客&lt;/h1&gt;
&lt;h2 id=&#34;安装-git-和-node推荐-lts-版&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装-git-和-node推荐-lts-版&#34;&gt;#&lt;/a&gt; 安装 git 和 node (推荐 LTS 版)&lt;/h2&gt;
&lt;p&gt;git 官网 -&amp;gt; &lt;a href=&#34;https://git-scm.com/&#34;&gt;https://git-scm.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;node 官网 -&amp;gt; &lt;a href=&#34;https://nodejs.org/en&#34;&gt;https://nodejs.org/en&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;检查安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#检查安装&#34;&gt;#&lt;/a&gt; 检查安装&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1696815879153-89905aee-a4f4-4351-b2be-a418d5289a1f.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装-hexo-博客&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装-hexo-博客&#34;&gt;#&lt;/a&gt; 安装 hexo 博客&lt;/h2&gt;
&lt;p&gt;找到一个位置，打开 **&lt;font style=&#34;color:rgb(0, 0, 0);&#34;&gt;Git Bash Here&lt;/font&gt;** 分别执行下面命令，其中 blog 可替换为你喜欢的名字（会在当前目录新建一个文件夹）&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install hexo-cli -g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo init blog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt; blog&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;验证博客&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#验证博客&#34;&gt;#&lt;/a&gt; 验证博客&lt;/h3&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(18, 18, 18);&#34;&gt;浏览器打开 -&amp;gt; &lt;/font&gt;&lt;a href=&#34;http://localhost:4000/&#34;&gt;http://localhost:4000/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打开后正常显示 hexo 默认博客&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1696819368453-729a4ca6-bbb8-4c85-8bca-ededef4785b6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;hexo-常用命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hexo-常用命令&#34;&gt;#&lt;/a&gt; hexo 常用命令&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install hexo -g &lt;span class=&#34;comment&#34;&gt;# 安装Hexo&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;npm update hexo -g &lt;span class=&#34;comment&#34;&gt;# 升级&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo init blog &lt;span class=&#34;comment&#34;&gt;# 初始化博客 blog(选填) 创建一个名为blog的目录并初始化&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;命令简写&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo n &lt;span class=&#34;string&#34;&gt;&amp;quot;文章名&amp;quot;&lt;/span&gt; == hexo new &lt;span class=&#34;string&#34;&gt;&amp;quot;文章名&amp;quot;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;# 新建文章&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo g == hexo generate &lt;span class=&#34;comment&#34;&gt;# 生成&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo s == hexo server &lt;span class=&#34;comment&#34;&gt;# 启动服务预览&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo d == hexo deploy &lt;span class=&#34;comment&#34;&gt;# 部署&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo server &lt;span class=&#34;comment&#34;&gt;# Hexo会监视文件变动并自动更新，无须重启服务器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo server -s &lt;span class=&#34;comment&#34;&gt;# 静态模式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo server -p xxxx &lt;span class=&#34;comment&#34;&gt;# 更改端口&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo server -i xxx.xxx.x.x &lt;span class=&#34;comment&#34;&gt;# 自定义IP&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo clean &lt;span class=&#34;comment&#34;&gt;#清除缓存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;github-创建仓库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#github-创建仓库&#34;&gt;#&lt;/a&gt; GitHub 创建仓库&lt;/h2&gt;
&lt;p&gt;仓库名称格式&lt;strong&gt;&lt;a href=&#34;http://xn--6qqv7i14ofosyrb.github.io&#34;&gt;你的用户名.github.io&lt;/a&gt;&lt;/strong&gt; 比如我这里应该写&lt;strong&gt;&lt;a href=&#34;http://alanhays.github.io&#34;&gt; alanhays.github.io&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1696820476904-24a7e455-bb29-4ee7-a0ec-aacac1cc62b4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;font-stylecolorrgb0-0-0生成秘钥公钥font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb0-0-0生成秘钥公钥font&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(0, 0, 0);&#34;&gt;生成秘钥 &amp;amp; 公钥&lt;/font&gt;&lt;/h3&gt;
&lt;p&gt;打开 **&lt;font style=&#34;color:rgb(0, 0, 0);&#34;&gt;Git Bash Here&lt;/font&gt;** 执行以下命令&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(0, 0, 0);&#34;&gt;yo&lt;/font&gt;urname 改为你的 GitHub 的&lt;strong&gt;用户名&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git &lt;span class=&#34;keyword&#34;&gt;config&lt;/span&gt; --&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; user&lt;span class=&#34;variable&#34;&gt;.name&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;yourname&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;youremail 改为你的注册 GitHub 时的&lt;strong&gt;邮箱&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight verilog&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;git &lt;span class=&#34;keyword&#34;&gt;config&lt;/span&gt; --&lt;span class=&#34;keyword&#34;&gt;global&lt;/span&gt; user&lt;span class=&#34;variable&#34;&gt;.email&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;youremail&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;创建 ssh，输入命令，然后一直回车&lt;/p&gt;
&lt;p&gt;youremail 改为你的注册 GitHub 时的&lt;strong&gt;邮箱&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh-keygen -t rsa -C &lt;span class=&#34;string&#34;&gt;&amp;quot;youremail&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(0, 0, 0);&#34;&gt;在文件中找到这个路径 &lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(0, 0, 0);&amp;quot;&amp;gt;C:\Users\你的用户名\.ssh&amp;lt;/font&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1696820209329-78aafc54-a4df-43ef-a591-a54c4cec435a.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(0, 0, 0);&#34;&gt;在 GitHub 的 Setting 里&lt;/font&gt;面，找到 SSH keys，把 &lt;strong&gt;&lt;font style=&#34;color:rgb(0, 0, 0);&#34;&gt;id_rsa.pub（公钥）&lt;/font&gt;&lt;/strong&gt; 里面的内容全部复制到 &lt;strong&gt;key&lt;/strong&gt; 进去&lt;font style=&#34;color:rgb(0, 0, 0);&#34;&gt;，&lt;/font&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(0, 0, 0);&#34;&gt;title&lt;/font&gt;&lt;/strong&gt;&lt;font style=&#34;color:rgb(0, 0, 0);&#34;&gt;随便写即可。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1696820340389-82002c4f-34f7-457b-aac5-c75fcf8d994f.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;font-stylecolorrgb0-0-0hexo-部署到-githubfont&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb0-0-0hexo-部署到-githubfont&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(0, 0, 0);&#34;&gt;hexo 部署到 GitHub&lt;/font&gt;&lt;/h2&gt;
&lt;p&gt;在 blog 文件夹下面找到_config.yml 文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1696820656627-84e947a3-c369-4f3a-9ca3-ee3dfdfabe6b.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在末尾找到 deploy 并修改（以文本格式打开 vscode 或记事本都可）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1696821058208-c025b513-dce0-4127-bfad-b9aa2e70aa06.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(0, 0, 0);&#34;&gt;yourname 改为你的&lt;/font&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(0, 0, 0);&#34;&gt;GitHub 的用户名&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;built_in&#34;&gt;type&lt;/span&gt;: git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  repo: git@github.com:yourname/yourname.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(0, 0, 0);&#34;&gt;打开 &lt;/font&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(0, 0, 0);&#34;&gt;Git Bash Here&lt;/font&gt;&lt;/strong&gt;&lt;font style=&#34;color:rgb(0, 0, 0);&#34;&gt; 安装 git 部署命令工具&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;npm install hexo-deployer-git --save&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;分别输入以下命令&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;hexo g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;开启-github-pages-服务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#开启-github-pages-服务&#34;&gt;#&lt;/a&gt; 开启 GitHub Pages 服务&lt;/h3&gt;
&lt;p&gt;打开你的仓库 &lt;strong&gt;&lt;font style=&#34;color:rgb(0, 0, 0);&#34;&gt;你的用户名.github.io&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1696821614735-b5d5d0f0-9a0f-4b59-93f1-801150eee96c.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(0, 0, 0);&#34;&gt;按照步骤操作开启 Pages&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1696821772577-05048722-563c-47be-bd46-b6d4932eec52.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;完成后等待一会，你可看到如下页面，点击&lt;strong&gt; Visit site&lt;/strong&gt; 查看你的博客&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1696821907600-a75b2eb4-b1a7-4b96-bcc1-c7b253012d83.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;hexo-主题配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hexo-主题配置&#34;&gt;#&lt;/a&gt; hexo 主题配置&lt;/h2&gt;
&lt;p&gt;推荐在主题市场选择喜欢的主题，主题中都有详细的使用教程。&lt;/p&gt;
&lt;p&gt;优质主题（排序不分先后）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/anzhiyu-c/hexo-theme-anzhiyu&#34;&gt;anzhiyu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/auroral-ui/hexo-theme-aurora&#34;&gt;aurora&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/amehime/hexo-theme-shoka&#34;&gt;shoka&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;主题市场 &lt;a href=&#34;https://hexo.io/themes/&#34;&gt;https://hexo.io/themes/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;创作主题教程 &lt;a href=&#34;https://hexo.io/zh-cn/docs/themes.html&#34;&gt;https://hexo.io/zh-cn/docs/themes.html&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;同步语雀文章&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#同步语雀文章&#34;&gt;#&lt;/a&gt; 同步语雀文章&lt;/h1&gt;
&lt;p&gt;项目：&lt;a href=&#34;https://github.com/x-cold/yuque-hexo&#34;&gt;https://github.com/x-cold/yuque-hexo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注：教程请看项目就不赘述了&lt;/p&gt;
&lt;h1 id=&#34;github-actions-自动同步&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#github-actions-自动同步&#34;&gt;#&lt;/a&gt; GitHub Actions 自动同步&lt;/h1&gt;
&lt;p&gt;项目：&lt;a href=&#34;https://github.com/yanglbme/gitee-pages-action&#34;&gt;https://github.com/yanglbme/gitee-pages-action&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注：教程请看项目就不赘述了，存放 &lt;code&gt;./github/workflows/xxx.yml&lt;/code&gt;  位置请看本文。&lt;/p&gt;
&lt;h3 id=&#34;hexo-项目-github-actions-存放位置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hexo-项目-github-actions-存放位置&#34;&gt;#&lt;/a&gt; hexo 项目 GitHub Actions 存放位置&lt;/h3&gt;
&lt;p&gt;gitee 仓库依靠 GitHub Actions  &lt;code&gt;./github/workflows/xxx.yml&lt;/code&gt;  实现&lt;/p&gt;
&lt;p&gt;需要将  &lt;code&gt;./github/workflows/xxx.yml&lt;/code&gt;  放置 &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(31, 35, 40);&amp;quot;&amp;gt;.deploy_git/.github/workflows/xxx.yml&amp;lt;/font&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;./github/workflows/xxx.yml&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.deploy_git/.github/workflows/xxx.yml&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如此 hexo d 命令推送时才会将 Actions 文件推送&lt;/p&gt;
&lt;h1 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h1&gt;
&lt;p&gt;1. 使用下面命令同步语雀最新文章，其中 xxx… 为 token 或 key。&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;set&lt;/span&gt; YUQUE_TOKEN=xxx SECRET_ID=xxx SECRET_KEY=xxx &amp;amp;&amp;amp; yuque-hexo &lt;span class=&#34;built_in&#34;&gt;sync&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2. 使用以下两个命令构建和部署博客&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;hexo g&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行完后等待 2-3 分钟博客就更新了，如果 github 更新了，gitee 没有那么请查看 GitHub Actions 详细日志，可能因为网络不稳定导致 GitHub Actions 执行失败，请手动执行或再次推送。&lt;/p&gt;
&lt;h2 id=&#34;我的实现一键更新博客参考&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#我的实现一键更新博客参考&#34;&gt;#&lt;/a&gt; 我的实现一键更新博客（参考）&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;我将变量设置为用户环境变量，相对不可见，变量名&lt;strong&gt;不可自定义&lt;/strong&gt; YUQUE_TOKEN = 你的语雀 token (可读权限)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;hexo clean &amp;amp;&amp;amp; yuque-hexo sync &amp;amp;&amp;amp; hexo g &amp;amp;&amp;amp; hexo algolia &amp;amp;&amp;amp; hexo d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;查看-github-actions-详细日志&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#查看-github-actions-详细日志&#34;&gt;#&lt;/a&gt; 查看 GitHub Actions 详细日志&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1696823576435-1a74066e-da49-448e-be1c-583f401dfc39.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1696823528572-b6272d05-57d4-42cd-b19d-67c888f754be.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/14781.html</guid>
            <title>AST解混淆插件函数</title>
            <link>https://alanhays.github.io/posts/14781.html</link>
            <pubDate>Sun, 08 Oct 2023 07:46:52 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;tags: [‘AST’,‘解混淆’]&lt;br&gt;
 categories: ‘经验教程’&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;&lt;font style=&#34;color:#DF2A3F;&#34;&gt;存在复用性的插件与函数，不定期补充。&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;字面量解混淆&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字面量解混淆&#34;&gt;#&lt;/a&gt; 字面量解混淆&lt;/h2&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; simplifyLiteral = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;NumericLiteral&lt;/span&gt;(&amp;#123; node &amp;#125;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (node.&lt;span class=&#34;property&#34;&gt;extra&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&#34;regexp&#34;&gt;/^0[obx]/i&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;test&lt;/span&gt;(node.&lt;span class=&#34;property&#34;&gt;extra&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;raw&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;//特征匹配&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      node.&lt;span class=&#34;property&#34;&gt;extra&lt;/span&gt; = &lt;span class=&#34;literal&#34;&gt;undefined&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;StringLiteral&lt;/span&gt;(&amp;#123; node &amp;#125;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (node.&lt;span class=&#34;property&#34;&gt;extra&lt;/span&gt; &amp;amp;&amp;amp; &lt;span class=&#34;regexp&#34;&gt;/\\[ux]/gi&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;test&lt;/span&gt;(node.&lt;span class=&#34;property&#34;&gt;extra&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;raw&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      node.&lt;span class=&#34;property&#34;&gt;extra&lt;/span&gt; = &lt;span class=&#34;literal&#34;&gt;undefined&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;规范块语句&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#规范块语句&#34;&gt;#&lt;/a&gt; 规范块语句&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;示例&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (i) &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; j = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;; j++) &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(j);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (i &amp;lt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) i++, &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; set = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Set&lt;/span&gt;([&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; element &lt;span class=&#34;keyword&#34;&gt;of&lt;/span&gt; set) &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(element);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; str = &lt;span class=&#34;string&#34;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; char &lt;span class=&#34;keyword&#34;&gt;of&lt;/span&gt; str) &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(char);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//-----------------------------------------&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; j = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;; j++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(j);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (i &amp;lt; &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  i++, &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; set = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Set&lt;/span&gt;([&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; element &lt;span class=&#34;keyword&#34;&gt;of&lt;/span&gt; set) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(element);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; str = &lt;span class=&#34;string&#34;&gt;&amp;quot;Hello&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; char &lt;span class=&#34;keyword&#34;&gt;of&lt;/span&gt; str) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(char);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;插件&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;BlockSyntax&lt;/span&gt; = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;ForStatement|WhileStatement|ForInStatement|ForOfStatement&amp;quot;&lt;/span&gt;(&amp;#123; node &amp;#125;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!types.&lt;span class=&#34;title function_&#34;&gt;isBlockStatement&lt;/span&gt;(node.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      node.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt; = types.&lt;span class=&#34;title class_&#34;&gt;BlockStatement&lt;/span&gt;([node.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;IfStatement&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; nodes = [&lt;span class=&#34;string&#34;&gt;&amp;quot;consequent&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;alternate&amp;quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; nodes.&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; _path = path.&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(nodes[i]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (_path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt; &amp;amp;&amp;amp; !_path.&lt;span class=&#34;title function_&#34;&gt;isBlockStatement&lt;/span&gt;()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        _path.&lt;span class=&#34;title function_&#34;&gt;replaceInline&lt;/span&gt;(types.&lt;span class=&#34;title class_&#34;&gt;BlockStatement&lt;/span&gt;([_path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;]));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://alanhays.github.io/posts/35002.html</guid>
            <title>AST解混淆常用API介绍</title>
            <link>https://alanhays.github.io/posts/35002.html</link>
            <pubDate>Wed, 27 Sep 2023 13:12:49 +0000</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;tags: [‘AST’]&lt;br&gt;
 categories: ‘经验教程’&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(38, 38, 38);&#34;&gt;sticky: ‘7’&lt;/font&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;font style=&#34;color:#DF2A3F;&#34;&gt;注意：解混淆插件几乎不可能做到通用所有混淆，学习 ast 才能对混淆进行还原。&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&#34;pathtypesnode的常用方法介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pathtypesnode的常用方法介绍&#34;&gt;#&lt;/a&gt; path/types (node) 的常用方法介绍&lt;/h2&gt;
&lt;h3 id=&#34;font-stylecolorrgb47-48-52fontfont-stylecolorrgb26-26-26查看节点的源代码font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb47-48-52fontfont-stylecolorrgb26-26-26查看节点的源代码font&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;&lt;/font&gt;&lt;font style=&#34;color:rgb(26, 26, 26);&#34;&gt;查看节点的源代码&lt;/font&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(38, 44, 49);&#34;&gt;&lt;/font&gt;&lt;font style=&#34;color:rgb(35, 41, 48);&#34;&gt;path&lt;/font&gt;&lt;font style=&#34;color:rgb(225, 0, 35);&#34;&gt;.&lt;/font&gt;&lt;font style=&#34;color:#74B602;&#34;&gt;toString&lt;/font&gt;&lt;font style=&#34;color:rgb(38, 44, 49);&#34;&gt;()&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:#74B602;&#34;&gt;generator&lt;/font&gt;&lt;font style=&#34;color:rgb(38, 44, 49);&#34;&gt;(&lt;/font&gt;&lt;font style=&#34;color:rgb(35, 41, 48);&#34;&gt;node&lt;/font&gt;&lt;font style=&#34;color:rgb(38, 44, 49);&#34;&gt;)&lt;/font&gt;&lt;font style=&#34;color:rgb(225, 0, 35);&#34;&gt;.&lt;/font&gt;&lt;font style=&#34;color:rgb(140, 72, 231);&#34;&gt;code&lt;/font&gt;&lt;font style=&#34;color:rgb(38, 44, 49);&#34;&gt;;&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;获取 path 与 node 的源代码方式。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//babel库相关，解析，转换，构建，生产&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; parser = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/parser&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; traverse = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/traverse&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;default&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; types = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/types&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; generator = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/generator&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;default&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// js源代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;`let a = &amp;quot;hi ast&amp;quot;;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//转换为ast树&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ast = parser.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(jsCode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 获取path源代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;path.toString: &amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &amp;#123; node &amp;#125; = path;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 获取node源代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;generator: &amp;quot;&lt;/span&gt;, &lt;span class=&#34;title function_&#34;&gt;generator&lt;/span&gt;(node).&lt;span class=&#34;property&#34;&gt;code&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &amp;#123; code &amp;#125; = &lt;span class=&#34;title function_&#34;&gt;generator&lt;/span&gt;(ast, (opts = &amp;#123; &lt;span class=&#34;attr&#34;&gt;jsescOption&lt;/span&gt;: &amp;#123; &lt;span class=&#34;attr&#34;&gt;minimal&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt; &amp;#125; &amp;#125;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 处理后的js源代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(code);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;判断节点类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#判断节点类型&#34;&gt;#&lt;/a&gt; 判断节点类型&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;types.&lt;font style=&#34;color:#74B602;&#34;&gt;is&lt;/font&gt;&lt;font style=&#34;color:#74B602;&#34;&gt;VariableDeclarator&lt;/font&gt;(node,opts)&lt;/p&gt;
&lt;p&gt;path.&lt;font style=&#34;color:#74B602;&#34;&gt;is&lt;/font&gt;&lt;font style=&#34;color:#74B602;&#34;&gt;VariableDeclarator&lt;/font&gt;(opts)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下方 &lt;code&gt;&amp;quot;FunctionDeclaration|FunctionExpression&amp;quot;&lt;/code&gt;  这样写可同时遍历当前两种或多种类型。&lt;/p&gt;
&lt;p&gt;判断节点是否是需要处理的节点，下面例子中常用到的姿势都有提到。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;let a = &amp;quot;&amp;quot;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var b = 0;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;const c = 2;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;function d () &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;  	console.log(&amp;#x27;hi&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var e = function () &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;	console.log(&amp;#x27;ok&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;FunctionDeclaration|FunctionExpression&amp;quot;&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// path方法可不传参数,默认为path.node&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (path.&lt;span class=&#34;title function_&#34;&gt;isFunctionExpression&lt;/span&gt;()) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;日志1：&amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;() + &lt;span class=&#34;string&#34;&gt;&amp;quot;;&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;VariableDeclaration&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 使用path方法,过滤let声明的节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (path.&lt;span class=&#34;title function_&#34;&gt;isVariableDeclaration&lt;/span&gt;(&amp;#123; &lt;span class=&#34;attr&#34;&gt;kind&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;let&amp;quot;&lt;/span&gt; &amp;#125;)) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 使用types方法,过滤var声明的节点,第一个参数node必填&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (types.&lt;span class=&#34;title function_&#34;&gt;isVariableDeclaration&lt;/span&gt;(path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;, &amp;#123; &lt;span class=&#34;attr&#34;&gt;kind&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;var&amp;quot;&lt;/span&gt; &amp;#125;)) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;日志2：&amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;日志&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;： &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; c = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;日志&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;： &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;d&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;hi&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;替换节点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#替换节点&#34;&gt;#&lt;/a&gt; 替换节点&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(38, 44, 49);&#34;&gt;path.&lt;/font&gt;&lt;font style=&#34;color:#8CCF17;&#34;&gt;replaceInline&lt;/font&gt;&lt;font style=&#34;color:rgb(38, 44, 49);&#34;&gt;(nodes)&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(38, 44, 49);&#34;&gt;path.&lt;/font&gt;&lt;font style=&#34;color:#8CCF17;&#34;&gt;replaceWithMultiple&lt;/font&gt;&lt;font style=&#34;color:rgb(38, 44, 49);&#34;&gt;()&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;path.&lt;/font&gt;&lt;font style=&#34;color:#8CCF17;&#34;&gt;replaceWith&lt;/font&gt;&lt;font style=&#34;color:rgb(38, 44, 49);&#34;&gt;()&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;推荐使用 replacelnline 方法，它兼容其他两种方法，无脑使用 replacelnline 即可。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;types.&lt;font style=&#34;color:#8CCF17;&#34;&gt;valueToNode &lt;/font&gt;方法可以将基础值转换为对应节点。&lt;/p&gt;
&lt;p&gt;下面这段插件可以将所有变量的值都变为 666。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var a = 1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var b = 2;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var c = 3;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ast = parser.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(jsCode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;title function_&#34;&gt;replaceInline&lt;/span&gt;(types.&lt;span class=&#34;title function_&#34;&gt;valueToNode&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;666&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;666&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; b = &lt;span class=&#34;number&#34;&gt;666&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; c = &lt;span class=&#34;number&#34;&gt;666&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;font-stylecolorrgb47-48-52节点删除font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb47-48-52节点删除font&#34;&gt;#&lt;/a&gt; &lt;strong&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;节点删除&lt;/font&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;path.&lt;/font&gt;&lt;font style=&#34;color:#8CCF17;&#34;&gt;remove()&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;该方法没有参数，可以将路径下的节点全部删除，使用请小心。&lt;/p&gt;
&lt;p&gt;下面示例将变量名为 &lt;code&gt;a&lt;/code&gt;  的 path 删除了，结果是删除了 &lt;code&gt;var a = 1;&lt;/code&gt;  这行代码。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var a = 1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var b = 2;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var c = 3;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ast = parser.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(jsCode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &amp;#123; id &amp;#125; = path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (id.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt; != &lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;title function_&#34;&gt;remove&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; b = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; c = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;font-stylecolorrgb47-48-52节点插入font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb47-48-52节点插入font&#34;&gt;#&lt;/a&gt; &lt;strong&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;节点插入&lt;/font&gt;&lt;/strong&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;path.&lt;/font&gt;&lt;font style=&#34;color:#8CCF17;&#34;&gt;insertBefore&lt;/font&gt;(&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;nodes&lt;/font&gt;) //&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;当前节点前插入&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;path.&lt;/font&gt;&lt;font style=&#34;color:#8CCF17;&#34;&gt;insertAfter&lt;/font&gt;(&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;nodes&lt;/font&gt;) // 当前节点后插入&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;什么地方可以插入节点？&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;一般在 [] 节点类型进行插入，你可以使用 Array 的方法来操作它，比如&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(47, 48, 52);&amp;quot;&amp;gt;pop&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;、&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(47, 48, 52);&amp;quot;&amp;gt;push&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;等等。&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;`var b = 1;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt; != &lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; node = types.&lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      types.&lt;span class=&#34;title class_&#34;&gt;Identifier&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      types.&lt;span class=&#34;title function_&#34;&gt;valueToNode&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// types.Identifier(&amp;quot;a&amp;quot;) 生成Identifier类型节点 实参“a” 实际是 name = “a”&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// types.valueToNode  将值转换为节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// console.log(generator(node).code)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;property&#34;&gt;parent&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;declarations&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;unshift&lt;/span&gt;(node); &lt;span class=&#34;comment&#34;&gt;// 等价于  path.insertBefore(node);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 构造节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; node1 = types.&lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      types.&lt;span class=&#34;title class_&#34;&gt;Identifier&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      types.&lt;span class=&#34;title function_&#34;&gt;valueToNode&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; node2 = types.&lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      types.&lt;span class=&#34;title class_&#34;&gt;Identifier&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;d&amp;quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      types.&lt;span class=&#34;title function_&#34;&gt;valueToNode&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// insertBefore 和 insertAfter 都支持多个node&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;title function_&#34;&gt;insertAfter&lt;/span&gt;([node1, node2]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;var a = 0,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    b = 1,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    c = 2,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    d = 3;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;获取父节点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获取父节点&#34;&gt;#&lt;/a&gt; 获取父节点&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;path.&lt;font style=&#34;color:rgb(140, 72, 231);&#34;&gt;parent&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;path.&lt;font style=&#34;color:rgb(140, 72, 231);&#34;&gt;parentPath&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;path.parentPath 获取的是 path，path.parent 获取的是 node，他们的关系如下：&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;path.&lt;span class=&#34;property&#34;&gt;parent&lt;/span&gt; = path.&lt;span class=&#34;property&#34;&gt;parentPath&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;font-stylecolorrgb47-48-52获取子孙节点font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb47-48-52获取子孙节点font&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;获取子孙节点&lt;/font&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;path.&lt;/font&gt;&lt;font style=&#34;color:#8CCF17;&#34;&gt;get&lt;/font&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;(key)&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;形参 key 是一个字符串，也就是路径，以。隔开。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;两种方式获取子节点。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;path.&lt;/font&gt;&lt;font style=&#34;color:#8CCF17;&#34;&gt;get&lt;/font&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;获取的是&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(47, 48, 52);&amp;quot;&amp;gt;path&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;，需要&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(47, 48, 52);&amp;quot;&amp;gt;.node&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;获取节点。&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;&amp;quot;var b = 1;&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;Program&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; node1 = path.&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;body.0.declarations.0&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; node2 = path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;].&lt;span class=&#34;property&#34;&gt;declarations&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(node1 === node2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;font-stylecolorrgb47-48-52获取兄弟节点font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb47-48-52获取兄弟节点font&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;获取兄弟节点&lt;/font&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;path.&lt;font style=&#34;color:#8CCF17;&#34;&gt;getPrevSibling&lt;/font&gt;() // &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;获取前一个兄弟节点&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;path.&lt;/font&gt;&lt;font style=&#34;color:#8CCF17;&#34;&gt;getAllPrevSiblings&lt;/font&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;() &lt;/font&gt;// &lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;获取所有的前兄弟节点&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;path.&lt;font style=&#34;color:#8CCF17;&#34;&gt;getNextSibling&lt;/font&gt;() // &lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;获取后一个兄弟节点&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;path.&lt;font style=&#34;color:#8CCF17;&#34;&gt;getAllNextSiblings&lt;/font&gt;() // &lt;font style=&#34;color:rgb(77, 77, 77);&#34;&gt;获取所有的后兄弟节点&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;获取的为 path，其中 getAllPrevSiblings，getAllNextSiblings 返回 path 列表。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var a = &amp;quot;老大&amp;quot;,b= &amp;quot;老二&amp;quot;, c =&amp;quot;老三&amp;quot;,d=&amp;quot;老四&amp;quot;,e=&amp;quot;老五&amp;quot;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt; != &lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;获取前一个兄弟节点&amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;title function_&#34;&gt;getPrevSibling&lt;/span&gt;().&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;获取所有的前兄弟节点&amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;title function_&#34;&gt;getAllPrevSiblings&lt;/span&gt;().&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;当前节点是&amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;获取后一个兄弟节点&amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;title function_&#34;&gt;getNextSibling&lt;/span&gt;().&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;获取所有的后兄弟节点&amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;title function_&#34;&gt;getAllNextSiblings&lt;/span&gt;().&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;获取前一个兄弟节点 b = &lt;span class=&#34;string&#34;&gt;&amp;quot;老二&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;获取所有的前兄弟节点 b = &lt;span class=&#34;string&#34;&gt;&amp;quot;老二&amp;quot;&lt;/span&gt;,a = &lt;span class=&#34;string&#34;&gt;&amp;quot;老大&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;当前节点是 c = &lt;span class=&#34;string&#34;&gt;&amp;quot;老三&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;获取后一个兄弟节点 d = &lt;span class=&#34;string&#34;&gt;&amp;quot;老四&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;获取所有的后兄弟节点 d = &lt;span class=&#34;string&#34;&gt;&amp;quot;老四&amp;quot;&lt;/span&gt;,e = &lt;span class=&#34;string&#34;&gt;&amp;quot;老五&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;font-stylecolorrgb47-48-52向上查找节点font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb47-48-52向上查找节点font&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;向上查找节点&lt;/font&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;path.&lt;font style=&#34;color:#8CCF17;&#34;&gt;findParent&lt;/font&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;(callback) // 从父节点查找&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;path.&lt;/font&gt;&lt;font style=&#34;color:#8CCF17;&#34;&gt;find&lt;/font&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;(callback) // 从当前节点查找&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:#8CCF17;&#34;&gt;find&lt;/font&gt;&lt;font style=&#34;color:#DF2A3F;&#34;&gt;(&lt;/font&gt;&lt;font style=&#34;color:#8CCF17;&#34;&gt;findParent&lt;/font&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;从父节点&lt;/font&gt;&lt;font style=&#34;color:#DF2A3F;&#34;&gt;)&lt;/font&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;从当前 path 开始向上遍历，直到满足回调函数条件为止，找不到则返回&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(47, 48, 52);&amp;quot;&amp;gt;null&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;。&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;function a() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    function b() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        function c() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;FunctionDeclaration&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &amp;#123; id &amp;#125; = path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//  进入最内层的d&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (id.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt; !== &lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; find = path.&lt;span class=&#34;title function_&#34;&gt;find&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;p&lt;/span&gt;) =&amp;gt;&lt;/span&gt; p.&lt;span class=&#34;title function_&#34;&gt;isFunctionDeclaration&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; findParent = path.&lt;span class=&#34;title function_&#34;&gt;findParent&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;p&lt;/span&gt;) =&amp;gt;&lt;/span&gt; p.&lt;span class=&#34;title function_&#34;&gt;isFunctionDeclaration&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; findParent1 = path.&lt;span class=&#34;title function_&#34;&gt;findParent&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;p&lt;/span&gt;) =&amp;gt;&lt;/span&gt; p.&lt;span class=&#34;title function_&#34;&gt;isFunctionDeclaration&lt;/span&gt;() &amp;amp;&amp;amp; p.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt; == &lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; findParent2 = path.&lt;span class=&#34;title function_&#34;&gt;findParent&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;p&lt;/span&gt;) =&amp;gt;&lt;/span&gt; p.&lt;span class=&#34;title function_&#34;&gt;isFunctionDeclaration&lt;/span&gt;() &amp;amp;&amp;amp; p.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt; == &lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;find -&amp;gt; &amp;quot;&lt;/span&gt;, find.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;findParent -&amp;gt; &amp;quot;&lt;/span&gt;, findParent.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;findParent1 -&amp;gt; &amp;quot;&lt;/span&gt;, findParent1.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;findParent2 -&amp;gt; &amp;quot;&lt;/span&gt;, findParent2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;find -&amp;gt;  &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;findParent -&amp;gt;  &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;b&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;findParent1 -&amp;gt;  &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;a&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;b&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;findParent2 -&amp;gt;  &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;font-stylecolorrgb47-48-52计算表达式的值font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb47-48-52计算表达式的值font&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;计算表达式的值&lt;/font&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;path.&lt;font style=&#34;color:#8CCF17;&#34;&gt;evaluate&lt;/font&gt;()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;通过&lt;/font&gt;&lt;font style=&#34;color:#8CCF17;&#34;&gt;evaluate&lt;/font&gt;&lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;可以直接帮你把结果计算出来。&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;`var a = 1+2;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var b = !![];`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; initPath = path.&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;init&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &amp;#123; confident, value &amp;#125; = initPath.&lt;span class=&#34;title function_&#34;&gt;evaluate&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!confident) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    initPath.&lt;span class=&#34;title function_&#34;&gt;replaceWith&lt;/span&gt;(types.&lt;span class=&#34;title function_&#34;&gt;valueToNode&lt;/span&gt;(value));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出结果&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; b = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;scopebinding-的用法介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#scopebinding-的用法介绍&#34;&gt;#&lt;/a&gt; scope&amp;amp;binding 的用法介绍&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;资料来源 -&amp;gt; &lt;a href=&#34;https://evilrecluse.top/post/7389a59f/#%E4%BD%9C%E7%94%A8%E5%9F%9FScope-%E4%B8%8E-%E8%A2%AB%E7%BB%91%E5%AE%9A%E9%87%8FBinding&#34;&gt;作用域 Scope - 与 - 被绑定量 Binding&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;作用域-scope&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#作用域-scope&#34;&gt;#&lt;/a&gt; 作用域 Scope&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(232, 62, 140);&amp;quot;&amp;gt;@Babel&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;解析出来的语法树节点对象会包含作用域信息，这个信息会作为节点&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(232, 62, 140);&amp;quot;&amp;gt;Node&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;对象的一个属性保存&lt;/font&gt;&lt;br&gt;
&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;这个属性本身是一个&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(232, 62, 140);&amp;quot;&amp;gt;Scope&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;对象，其定义位于&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(232, 62, 140);&amp;quot;&amp;gt;node_modules/@babel/traverse/lib/scope/index.js&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;中&lt;/font&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(113, 128, 150);&#34;&gt;例：查看基本的 作用域与绑定 信息&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; parser = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/parser&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; traverse = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/traverse&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;default&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; jscode = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;function squire(i)&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    return i * i * i;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;function i()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    var i = 123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    i += 2;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    return 123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ast = parser.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(jscode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; visitor = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;FunctionDeclaration&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\n\n这里是函数 &amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt; + &lt;span class=&#34;string&#34;&gt;&amp;quot;()&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;property&#34;&gt;scope&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;dump&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, visitor);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;执行 &lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(232, 62, 140);&amp;quot;&amp;gt;Scope.dump()&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;，会得到自底向上的 作用域与变量信息&lt;/font&gt;&lt;br&gt;
&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;得到结果：&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;这里是函数  squire()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# FunctionDeclaration&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- i &amp;#123; constant: true, references: 3, violations: 0, kind: &amp;#x27;param&amp;#x27; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Program&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- squire &amp;#123; constant: true, references: 0, violations: 0, kind: &amp;#x27;hoisted&amp;#x27; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- i &amp;#123; constant: true, references: 0, violations: 0, kind: &amp;#x27;hoisted&amp;#x27; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;这里是函数  i()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# FunctionDeclaration&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- i &amp;#123; constant: false, references: 0, violations: 1, kind: &amp;#x27;var&amp;#x27; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;# Program&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- squire &amp;#123; constant: true, references: 0, violations: 0, kind: &amp;#x27;hoisted&amp;#x27; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;- i &amp;#123; constant: true, references: 0, violations: 0, kind: &amp;#x27;hoisted&amp;#x27; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;------------------------------------------------------------&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;输出查看方法&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;每一个作用域都以&lt;/font&gt;&lt;font style=&#34;color:rgb(232, 62, 140);&#34;&gt;#&lt;/font&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;标识输出&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;每一个绑定都以&lt;/font&gt;&lt;font style=&#34;color:rgb(232, 62, 140);&#34;&gt;-&lt;/font&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;标识输出&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;对于单次输出，都是自底向上的&lt;br&gt;
&lt;/font&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;先输出当前作用域，再输出父级作用域，再输出父级的父级作用域……&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;对于单个绑定&lt;/font&gt;&lt;font style=&#34;color:rgb(232, 62, 140);&#34;&gt;Binding&lt;/font&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;，会输出 4 种信息&lt;/font&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;constant 声明后，是否会被修改&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;references 被引用次数&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;violations 被重新定义的次数&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;kind 函数声明类型。param 参数，hoisted 提升，var 变量， local 内部&lt;/font&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;后续会单独说明&lt;/font&gt;&lt;font style=&#34;color:rgb(232, 62, 140);&#34;&gt;Binding&lt;/font&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;对象，此处留个印象即可&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;描述&lt;/font&gt;&lt;/strong&gt;&lt;br&gt;
&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;此处从两个函数节点输出了其作用域的信息&lt;/font&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;这两个函数都是定义在同一级下的，所以都会输出相同的父级作用域&lt;/font&gt;&lt;font style=&#34;color:rgb(232, 62, 140);&#34;&gt;Program&lt;/font&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;的信息&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;你会发现，代码中有非常多个&lt;/font&gt;&lt;font style=&#34;color:rgb(232, 62, 140);&#34;&gt;i&lt;/font&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;，有的是函数定义，有的是参数，有的是变量。仔细观察它们的不同之处&lt;br&gt;
&lt;/font&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;解释器就是通过 不同层级的作用域 与 绑定定义信息 来区分不同的名称的量的&lt;/font&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;绑定-binding&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绑定-binding&#34;&gt;#&lt;/a&gt; 绑定 Binding&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(232, 62, 140);&amp;quot;&amp;gt;Binding&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt; 对象用于存储 绑定 的信息&lt;br&gt;
&lt;/font&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;这个对象会作为&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(232, 62, 140);&amp;quot;&amp;gt;Scope&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;对象的一个属性存在&lt;br&gt;
&lt;/font&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;同一个作用域可以包含多个 &lt;/font&gt;&lt;font style=&#34;color:rgb(232, 62, 140);&#34;&gt;Binding&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;你可以在 &lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(232, 62, 140);&amp;quot;&amp;gt;@babel/traverse/lib/scope/binding.js&amp;lt;/font&amp;gt;&amp;lt;font style=&amp;quot;color:rgb(44, 62, 80);&amp;quot;&amp;gt;&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;中查看到它的定义&lt;/font&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(113, 128, 150);&#34;&gt;显示 Binding 的信息&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; parser = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/parser&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; traverse = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/traverse&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;default&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; jscode = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;function a()&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    var a = 1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    a = a + 1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    return a;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;function b()&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    var b = 1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    var c = 2;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    b = b - c;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    return b;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ast = parser.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(jscode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; visitor = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;BlockStatement&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;\n此块节点源码：\n&amp;quot;&lt;/span&gt;, path.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;----------------------------------------&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; bindings = path.&lt;span class=&#34;property&#34;&gt;scope&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;bindings&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;作用域内 被绑定量 数量：&amp;quot;&lt;/span&gt;, &lt;span class=&#34;title class_&#34;&gt;Object&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;keys&lt;/span&gt;(bindings).&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; binding_ &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; bindings) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;名字：&amp;quot;&lt;/span&gt;, binding_);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      binding_ = bindings[binding_];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;类型：&amp;quot;&lt;/span&gt;, binding_.&lt;span class=&#34;property&#34;&gt;kind&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;定义：&amp;quot;&lt;/span&gt;, binding_.&lt;span class=&#34;property&#34;&gt;identifier&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;是否会被修改：&amp;quot;&lt;/span&gt;, binding_.&lt;span class=&#34;property&#34;&gt;constant&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;被修改信息信息记录&amp;quot;&lt;/span&gt;, binding_.&lt;span class=&#34;property&#34;&gt;constantViolations&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;是否会被引用：&amp;quot;&lt;/span&gt;, binding_.&lt;span class=&#34;property&#34;&gt;referenced&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;被引用次数&amp;quot;&lt;/span&gt;, binding_.&lt;span class=&#34;property&#34;&gt;references&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;被引用信息NodePath记录&amp;quot;&lt;/span&gt;, binding_.&lt;span class=&#34;property&#34;&gt;referencePaths&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, visitor);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;会输出一大堆信息。其对应的意义已经写在代码中，可以自行查看&lt;/font&gt;&lt;/p&gt;
&lt;h3 id=&#34;作用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#作用&#34;&gt;#&lt;/a&gt; 作用&lt;/h3&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;在解混淆中，作用域与绑定 主要用来处理边界的问题&lt;/font&gt;&lt;br&gt;
&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;即：某个量哪里引用了，在哪里定义&lt;/font&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(113, 128, 150);&#34;&gt;例：删除所有定义了，却从未使用的变量&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; parser = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/parser&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; traverse = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/traverse&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;default&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; generator = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/generator&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;default&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; jscode = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var a = 1;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var b = 2;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;function squire()&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;  var c = 3;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;  var d = 4;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;  return a * d;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;  var e = 5;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;var f = 6;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ast = parser.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(jscode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; visitor = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;VariableDeclarator&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; func_name = path.&lt;span class=&#34;property&#34;&gt;node&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;id&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;name&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; binding = path.&lt;span class=&#34;property&#34;&gt;scope&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;getBinding&lt;/span&gt;(func_name);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如果变量没有被引用过，那么删除也没关系&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//   此处不能用有无修改过进行判断，因为没有被修改过并不意味着没用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (binding &amp;amp;&amp;amp; !binding.&lt;span class=&#34;property&#34;&gt;referenced&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      path.&lt;span class=&#34;title function_&#34;&gt;remove&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, visitor);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;generator&lt;/span&gt;(ast)[&lt;span class=&#34;string&#34;&gt;&amp;quot;code&amp;quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;得到输出:&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;squire&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; d = &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; a * d;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;这里使用了&lt;/font&gt;&lt;font style=&#34;color:rgb(232, 62, 140);&#34;&gt;Scope.getBinding()&lt;/font&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;方法来获取&lt;/font&gt;&lt;font style=&#34;color:rgb(232, 62, 140);&#34;&gt;Binding&lt;/font&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;对象，判断其引用情况来对语法树进行修改&lt;/font&gt;&lt;/p&gt;
&lt;h2 id=&#34;构建节点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#构建节点&#34;&gt;#&lt;/a&gt; 构建节点&lt;/h2&gt;
&lt;h3 id=&#34;不推荐的方式需要了解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#不推荐的方式需要了解&#34;&gt;#&lt;/a&gt; 不推荐的方式（需要了解）&lt;/h3&gt;
&lt;p&gt;AST 在 js 看来就是一个 json 数据，说明可以构建 {} 的方式构建节点。&lt;/p&gt;
&lt;p&gt;假设我们需要构造这段代码  &lt;code&gt;var a = 0;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;先使用 &lt;a href=&#34;https://astexplorer.net/&#34;&gt;ASTexplorer&lt;/a&gt; 查看该代码的 AST。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1687105425701-0c9fd23d-f7d9-4084-8967-a1e126f706b2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;js 源代码 &lt;code&gt;var a = 0;&lt;/code&gt;  的 JSON 数据&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;VariableDeclaration&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;end&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;declarations&amp;quot;&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;VariableDeclarator&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;end&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Identifier&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;end&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;string&#34;&gt;&amp;quot;init&amp;quot;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;type&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;NumericLiteral&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;start&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;end&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;9&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;value&amp;quot;&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;string&#34;&gt;&amp;quot;raw&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;kind&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;var&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;敏锐的你发现每个节点都有 &lt;code&gt;start&lt;/code&gt; 、 &lt;code&gt;end&lt;/code&gt; 、 &lt;code&gt;type&lt;/code&gt;  这几个属性和其余不同的属性，这些都是必要的吗？哪些是必要的。这时需要参考 &lt;a href=&#34;https://babeljs.io/docs/babel-types&#34;&gt;https://babeljs.io/docs/babel-types&lt;/a&gt; 查看哪些是必要节点。&lt;/p&gt;
&lt;p&gt;以 &lt;code&gt;VariableDeclaration&lt;/code&gt;  为例。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1686650451689-cc4f1c3d-2e3d-44b7-8890-a14bd33242f2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到 &lt;code&gt;VariableDeclaration&lt;/code&gt;  类型的节点有两个必要的节点&lt;font style=&#34;color:#DF2A3F;&#34;&gt;（&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:#DF2A3F;&amp;quot;&amp;gt;type&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:#DF2A3F;&#34;&gt;对于任何节点都是必须的）&lt;/font&gt;，其中 &lt;code&gt;kind&lt;/code&gt;  的类型为 &lt;code&gt;string&lt;/code&gt;  值为&lt;font style=&#34;background-color:#FBDE28;&#34;&gt;黄色框框&lt;/font&gt;框住的，而 &lt;code&gt;declarations&lt;/code&gt;  的类型则为 VariableDeclarator 数组。&lt;/p&gt;
&lt;p&gt;再参照其他类型节点的必要参数，简化得到下面的 ast 节点。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; astNode = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;VariableDeclaration&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;declarations&lt;/span&gt;: [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;VariableDeclarator&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Identifier&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;name&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;init&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;NumericLiteral&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;value&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;kind&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;var&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;generator&lt;/span&gt;(astNode).&lt;span class=&#34;property&#34;&gt;code&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;types-函数构造节点&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#types-函数构造节点&#34;&gt;#&lt;/a&gt; types 函数构造节点&lt;/h3&gt;
&lt;p&gt;手搓 &lt;code&gt;ast&lt;/code&gt;  节点虽然不难，但是复杂的节点构建起来很冗余， &lt;code&gt;types&lt;/code&gt;  提供了构建 &lt;code&gt;node&lt;/code&gt;  的 &lt;code&gt;function&lt;/code&gt; ，使用它们来构造简洁高效。如图构造函数的参数及顺序。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1687105795085-d60a2f32-1e90-4883-94ab-ad63cdc4a14a.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; astNode = types.&lt;span class=&#34;title function_&#34;&gt;variableDeclaration&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;var&amp;quot;&lt;/span&gt;, [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  types.&lt;span class=&#34;title function_&#34;&gt;variableDeclarator&lt;/span&gt;(types.&lt;span class=&#34;title function_&#34;&gt;identifier&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;), types.&lt;span class=&#34;title function_&#34;&gt;numericLiteral&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;generator&lt;/span&gt;(astNode).&lt;span class=&#34;property&#34;&gt;code&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;font-stylecolorrgb26-26-26template-快速构造节点推荐font&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#font-stylecolorrgb26-26-26template-快速构造节点推荐font&#34;&gt;#&lt;/a&gt; &lt;font style=&#34;color:rgb(26, 26, 26);&#34;&gt;template 快速构造节点（推荐）&lt;/font&gt;&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;types.xxx&lt;/code&gt;  来构建节点虽然简洁了不少，但还是觉着繁琐。那么使用 &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(47, 48, 52);&amp;quot;&amp;gt;template&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;绝对会让你眼前一亮。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;假设需要构建 &lt;code&gt;var a = 0,b = 1,c = 2;&lt;/code&gt;  使用手搓或 &lt;code&gt;types.xxx&lt;/code&gt;  都很繁琐，那么试试新姿势吧！&lt;font style=&#34;color:#DF2A3F;&#34;&gt;别忘了导包哦！&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; template = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/template&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;default&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; &lt;span class=&#34;variable constant_&#34;&gt;VAR_NODE&lt;/span&gt; = &lt;span class=&#34;title function_&#34;&gt;template&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;`var A = 0,B = 1, C = 2`&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里定义了 &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(47, 48, 52);&amp;quot;&amp;gt;VAR_NODE&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;变量，其中&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(47, 48, 52);&amp;quot;&amp;gt;A&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;,&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(47, 48, 52);&amp;quot;&amp;gt;B&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;,&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(47, 48, 52);&amp;quot;&amp;gt;C&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;类似于占位符&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(47, 48, 52);&amp;quot;&amp;gt;VAR_NODE&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;接收一个参数&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(47, 48, 52);&amp;quot;&amp;gt;&amp;#123;&amp;#125;&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;,&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(47, 48, 52);&amp;quot;&amp;gt;&amp;#123;&amp;#125;&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;的&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(47, 48, 52);&amp;quot;&amp;gt;A&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;,&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(47, 48, 52);&amp;quot;&amp;gt;B&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;,&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(47, 48, 52);&amp;quot;&amp;gt;C&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;这几个属性需要分别构造，&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(47, 48, 52);&amp;quot;&amp;gt;A&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;,&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(47, 48, 52);&amp;quot;&amp;gt;B&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;,&lt;/font&gt; &lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(47, 48, 52);&amp;quot;&amp;gt;C&amp;lt;/font&amp;gt;&lt;/code&gt; &lt;font style=&#34;color:rgb(47, 48, 52);&#34;&gt;等价于&lt;/font&gt; &lt;code&gt;VariableDeclarator&lt;/code&gt;  节点的 &lt;code&gt;id&lt;/code&gt;  属性，也就是 &lt;code&gt;identifier&lt;/code&gt;  节点，直接字符串也可以（&lt;font style=&#34;background-color:#FBDE28;&#34;&gt;标识符类型&lt;/font&gt;）。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; astNode = &lt;span class=&#34;title function_&#34;&gt;VAR_NODE&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;A&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;a&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;B&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;b&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;C&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;c&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;generator&lt;/span&gt;(astNode).&lt;span class=&#34;property&#34;&gt;code&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;font style=&#34;color:rgb(44, 62, 80);&#34;&gt;得到输出:&lt;/font&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; a = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  b = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  c = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;特性介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#特性介绍&#34;&gt;#&lt;/a&gt; 特性介绍&lt;/h2&gt;
&lt;h3 id=&#34;同时遍历多个类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#同时遍历多个类型&#34;&gt;#&lt;/a&gt; 同时遍历多个类型&lt;/h3&gt;
&lt;p&gt;假设需要同时遍历多个类型，可以这样写插件，这样写一个方法处理两种类型的节点。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsCode = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;let a = &amp;quot;&amp;quot;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;let b = 0;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;function d () &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;  	console.log(&amp;#x27;hi&amp;#x27;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ast = parser.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(jsCode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;FunctionDeclaration|VariableDeclaration&amp;quot;&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(path.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;还可以这样写单独处理各自的类型的节点。&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;FunctionDeclaration&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(path.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;() + &lt;span class=&#34;string&#34;&gt;&amp;quot;;&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;VariableDeclaration&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(path.&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;pathtraversestate&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pathtraversestate&#34;&gt;#&lt;/a&gt; path.traverse&lt;state&gt;&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;注意： path.traverse !== traverse&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在  &lt;code&gt;path.traverse&lt;/code&gt;  方法中， &lt;code&gt;state&lt;/code&gt;  参数是一个对象，用于在遍历过程中保存和传递状态信息。你可以在访问器函数中使用  &lt;code&gt;state&lt;/code&gt;  对象来存储和更新任何你需要的信息。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;state&lt;/code&gt;  对象在遍历开始时由  &lt;code&gt;path.traverse&lt;/code&gt;  方法创建并传递给每个访问器函数。你可以在访问器函数中修改  &lt;code&gt;state&lt;/code&gt;  对象，以跟踪遍历过程中的状态。这些修改将在遍历过程中保留下来，并且在访问器函数之间共享。&lt;/p&gt;
&lt;p&gt;以下是一个示例，展示了如何在  &lt;code&gt;path.traverse&lt;/code&gt;  中使用  &lt;code&gt;state&lt;/code&gt;  对象：&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; traverse = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/traverse&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;default&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; parser = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;@babel/parser&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; code = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;function a() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    function b() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        function c() &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ast = parser.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(code);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; state = &amp;#123; &lt;span class=&#34;attr&#34;&gt;counter&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; visitors = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;BlockStatement&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;enter&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;path, state&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 在进入节点之前进行操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      state.&lt;span class=&#34;property&#34;&gt;counter&lt;/span&gt;++;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;exit&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;path, state&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 在离开节点之后进行操作&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;variable language_&#34;&gt;console&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;遍历了&amp;quot;&lt;/span&gt;, state.&lt;span class=&#34;property&#34;&gt;counter&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;个节点&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(ast, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title class_&#34;&gt;BlockStatement&lt;/span&gt;(path) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    path.&lt;span class=&#34;title function_&#34;&gt;traverse&lt;/span&gt;(visitors, state);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在上面的示例中，我们创建了一个包含  &lt;code&gt;counter&lt;/code&gt;  属性的  &lt;code&gt;state&lt;/code&gt;  对象，并在  &lt;code&gt;enter&lt;/code&gt;  和  &lt;code&gt;exit&lt;/code&gt;  访问器中使用它来跟踪遍历的节点数量。在遍历开始时，我们将  &lt;code&gt;state&lt;/code&gt;  对象作为第三个参数传递给  &lt;code&gt;path.traverse&lt;/code&gt;  方法。然后，在每个访问器函数中，我们都可以使用和修改  &lt;code&gt;state&lt;/code&gt;  对象。在  &lt;code&gt;enter&lt;/code&gt;  访问器中，我们增加了  &lt;code&gt;counter&lt;/code&gt;  的值；在  &lt;code&gt;exit&lt;/code&gt;  访问器中，我们打印了遍历的节点数量。&lt;/p&gt;
&lt;p&gt;通过使用  &lt;code&gt;state&lt;/code&gt;  对象，你可以在遍历过程中跟踪和存储任何你需要的信息，并在访问器函数中进行相应的操作。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注意 traverse 并没有 state 参数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.nlark.com/yuque/0/2023/png/26634545/1697874762901-eefdfac9-151e-4c07-9505-60de6509089a.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;babelgeneratoroptions&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#babelgeneratoroptions&#34;&gt;#&lt;/a&gt; babel/generator&lt;options&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;babel/generator&lt;/code&gt;  的  &lt;code&gt;options&lt;/code&gt;  参数包括以下几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;filename&lt;/code&gt; : 字符串，指定正在生成的文件的路径。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sourceMap&lt;/code&gt; : 可选，是一个布尔值，指示是否生成 source map。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sourceMapName&lt;/code&gt; : 可选，是一个字符串或函数，指定生成的 source map 的名称。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sourceFileName&lt;/code&gt; : 可选，是一个字符串或函数，指定源文件的名称。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sourceRoot&lt;/code&gt; : 可选，是一个字符串或函数，指定源文件的根目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;moduleRoot&lt;/code&gt; : 可选，是一个字符串或函数，指定模块的根目录。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;moduleId&lt;/code&gt; : 可选，是一个字符串或函数，指定生成的模块的 ID。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;looseModules&lt;/code&gt; : 可选，是一个布尔值，指示是否使用 loose 模块模式。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;esModules&lt;/code&gt; : 可选，是一个布尔值，指示是否使用 ES6 模块。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sourceType&lt;/code&gt; : 可选，是一个字符串或函数，指定源代码的类型（例如 “script” 或 “module”）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;requires&lt;/code&gt; : 可选，是一个数组，包含需要生成的 require 语句。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;plugins&lt;/code&gt; : 可选，是一个数组，包含要应用的插件。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;retainLines&lt;/code&gt; : 可选，是一个布尔值，指示是否保留行号。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;comments&lt;/code&gt; : 可选，是一个布尔值或函数，指示是否保留注释。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;compact&lt;/code&gt; : 可选，“auto” 或 “true” 表示启用压缩；“false” 表示禁用压缩；“true” 表示在压缩时忽略一些不必要的空白符；“紊” 表示在压缩时保留所有空白符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;minified&lt;/code&gt; : 可选，是一个布尔值，指示是否启用最小化。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;uglify&lt;/code&gt; : 可选，是一个布尔值或对象，指示是否启用 UglifyJS 风格的压缩。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;beautify: true&lt;/code&gt;  可选，启用美化输出。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;asciiOnly&lt;/code&gt; : 可选，一个布尔值，指示是否将 Unicode 字符转换为 ASCII 字符。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;quoteKeys&lt;/code&gt; : 可选，一个布尔值，指示是否在对象字面量中保留键名。&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
    </channel>
</rss>
